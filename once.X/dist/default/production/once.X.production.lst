

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Dec 17 17:27:37 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    35                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    37  0000                     
    38                           ; Version 2.20
    39                           ; Generated 12/02/2020 GMT
    40                           ; 
    41                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC18F4520 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     
    73                           	psect	smallconst
    74  000600                     __psmallconst:
    75                           	callstack 0
    76  000600  00                 	db	0
    77  000601                     _valor:
    78                           	callstack 0
    79  000601  3F                 	db	63
    80  000602  06                 	db	6
    81  000603  5B                 	db	91
    82  000604  4F                 	db	79
    83  000605  66                 	db	102
    84  000606  6D                 	db	109
    85  000607  7D                 	db	125
    86  000608  07                 	db	7
    87  000609  7F                 	db	127
    88  00060A  6F                 	db	111
    89  00060B  77                 	db	119
    90  00060C  7C                 	db	124
    91  00060D  39                 	db	57
    92  00060E  5E                 	db	94
    93  00060F  79                 	db	121
    94  000610  71                 	db	113
    95  000611                     __end_of_valor:
    96                           	callstack 0
    97  000611  55                 	db	85
    98  000612  4C                 	db	76
    99  000613  44                 	db	68
   100  000614  52                 	db	82
   101  000615  53                 	db	83
   102  000616  58                 	db	88
   103  000617  41                 	db	65
   104  000618  42                 	db	66
   105  000619  59                 	db	89
   106  00061A  73                 	db	115
   107  00061B                     __end_of_charKey:
   108                           	callstack 0
   109  0000                     _T0CON	set	4053
   110  0000                     _TMR0L	set	4054
   111  0000                     _TMR0H	set	4055
   112  0000                     _INTCON	set	4082
   113  0000                     _SPBRG	set	4015
   114  0000                     _SPBRGH	set	4016
   115  0000                     _BAUDCON	set	4024
   116  0000                     _TXSTA	set	4012
   117  0000                     _RCREG	set	4014
   118  0000                     _RCSTA	set	4011
   119  0000                     _TXREG	set	4013
   120  0000                     _PIR1	set	3998
   121  0000                     _ADRESL	set	4035
   122  0000                     _ADRESH	set	4036
   123  0000                     _ADCON2	set	4032
   124  0000                     _ADCON0	set	4034
   125  0000                     _TRISE	set	3990
   126  0000                     _TRISC	set	3988
   127  0000                     _TRISB	set	3987
   128  0000                     _TRISA	set	3986
   129  0000                     _PORTE	set	3972
   130  0000                     _PORTC	set	3970
   131  0000                     _PORTB	set	3969
   132  0000                     _PORTA	set	3968
   133  0000                     _ADCON1	set	4033
   134  0000                     _PORTD	set	3971
   135  0000                     _TRISD	set	3989
   136  00061B                     STR_3:
   137  00061B  49                 	db	73	;'I'
   138  00061C  6D                 	db	109	;'m'
   139  00061D  70                 	db	112	;'p'
   140  00061E  72                 	db	114	;'r'
   141  00061F  69                 	db	105	;'i'
   142  000620  6D                 	db	109	;'m'
   143  000621  69                 	db	105	;'i'
   144  000622  6E                 	db	110	;'n'
   145  000623  64                 	db	100	;'d'
   146  000624  6F                 	db	111	;'o'
   147  000625  2E                 	db	46
   148  000626  2E                 	db	46
   149  000627  2E                 	db	46
   150  000628  00                 	db	0
   151  000629                     STR_1:
   152  000629  49                 	db	73	;'I'
   153  00062A  6D                 	db	109	;'m'
   154  00062B  70                 	db	112	;'p'
   155  00062C  72                 	db	114	;'r'
   156  00062D  65                 	db	101	;'e'
   157  00062E  73                 	db	115	;'s'
   158  00062F  73                 	db	115	;'s'
   159  000630  6F                 	db	111	;'o'
   160  000631  72                 	db	114	;'r'
   161  000632  61                 	db	97	;'a'
   162  000633  3A                 	db	58	;':'
   163  000634  00                 	db	0
   164  000635                     STR_2:
   165  000635  43                 	db	67	;'C'
   166  000636  6F                 	db	111	;'o'
   167  000637  70                 	db	112	;'p'
   168  000638  69                 	db	105	;'i'
   169  000639  61                 	db	97	;'a'
   170  00063A  73                 	db	115	;'s'
   171  00063B  3A                 	db	58	;':'
   172  00063C  00                 	db	0
   173  00063D  00                 	db	0	; dummy byte at the end
   174  0000                     
   175                           ; #config settings
   176                           
   177                           	psect	cinit
   178  0014BC                     __pcinit:
   179                           	callstack 0
   180  0014BC                     start_initialization:
   181                           	callstack 0
   182  0014BC                     __initialization:
   183                           	callstack 0
   184                           
   185                           ; Clear objects allocated to COMRAM (12 bytes)
   186  0014BC  EE00  F021         	lfsr	0,__pbssCOMRAM
   187  0014C0  0E0C               	movlw	12
   188  0014C2                     clear_0:
   189  0014C2  6AEE               	clrf	postinc0,c
   190  0014C4  06E8               	decf	wreg,f,c
   191  0014C6  E1FD               	bnz	clear_0
   192  0014C8                     end_of_initialization:
   193                           	callstack 0
   194  0014C8                     __end_of__initialization:
   195                           	callstack 0
   196  0014C8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   197  0014CA  6EF8               	movwf	tblptru,c
   198  0014CC  0100               	movlb	0
   199  0014CE  EF6D  F005         	goto	_main	;jump to C main() function
   200                           
   201                           	psect	bssCOMRAM
   202  000021                     __pbssCOMRAM:
   203                           	callstack 0
   204  000021                     kpDebounce@oldRead:
   205                           	callstack 0
   206  000021                     	ds	2
   207  000023                     kpDebounce@newRead:
   208                           	callstack 0
   209  000023                     	ds	2
   210  000025                     _keys:
   211                           	callstack 0
   212  000025                     	ds	2
   213  000027                     _v3:
   214                           	callstack 0
   215  000027                     	ds	1
   216  000028                     _v2:
   217                           	callstack 0
   218  000028                     	ds	1
   219  000029                     _v1:
   220                           	callstack 0
   221  000029                     	ds	1
   222  00002A                     _v0:
   223                           	callstack 0
   224  00002A                     	ds	1
   225  00002B                     _display:
   226                           	callstack 0
   227  00002B                     	ds	1
   228  00002C                     kpDebounce@tempo:
   229                           	callstack 0
   230  00002C                     	ds	1
   231                           
   232                           	psect	cstackCOMRAM
   233  000001                     __pcstackCOMRAM:
   234                           	callstack 0
   235  000001                     ?_kpRead:
   236                           	callstack 0
   237  000001                     ?_digitalRead:
   238                           	callstack 0
   239  000001                     ?___lldiv:
   240                           	callstack 0
   241  000001                     temp@X:
   242                           	callstack 0
   243  000001                     delayMicro@a:
   244                           	callstack 0
   245  000001                     delayMili@a:
   246                           	callstack 0
   247  000001                     digitalWrite@pin:
   248                           	callstack 0
   249  000001                     digitalRead@pin:
   250                           	callstack 0
   251  000001                     pinMode@pin:
   252                           	callstack 0
   253  000001                     ___lldiv@dividend:
   254                           	callstack 0
   255                           
   256                           ; 4 bytes @ 0x0
   257  000001                     	ds	2
   258  000003                     ??_digitalRead:
   259  000003                     ??_delayMili:
   260  000003                     temp@i:
   261                           	callstack 0
   262  000003                     digitalWrite@value:
   263                           	callstack 0
   264  000003                     pinMode@type:
   265                           	callstack 0
   266                           
   267                           ; 2 bytes @ 0x2
   268  000003                     	ds	1
   269  000004                     delayMili@i:
   270                           	callstack 0
   271                           
   272                           ; 2 bytes @ 0x3
   273  000004                     	ds	1
   274  000005                     ??_pinMode:
   275  000005                     ??_digitalWrite:
   276  000005                     temp@j:
   277                           	callstack 0
   278  000005                     ___lldiv@divisor:
   279                           	callstack 0
   280                           
   281                           ; 4 bytes @ 0x4
   282  000005                     	ds	1
   283  000006                     temp@k:
   284                           	callstack 0
   285                           
   286                           ; 1 bytes @ 0x5
   287  000006                     	ds	1
   288  000007                     soWrite@value:
   289                           	callstack 0
   290                           
   291                           ; 2 bytes @ 0x6
   292  000007                     	ds	2
   293  000009                     soWrite@i:
   294                           	callstack 0
   295  000009                     ___lldiv@quotient:
   296                           	callstack 0
   297                           
   298                           ; 4 bytes @ 0x8
   299  000009                     	ds	1
   300  00000A                     ??_kpDebounce:
   301  00000A                     pushNibble@rs:
   302                           	callstack 0
   303  00000A                     pushByte@rs:
   304                           	callstack 0
   305                           
   306                           ; 2 bytes @ 0x9
   307  00000A                     	ds	2
   308  00000C                     ??_pushByte:
   309  00000C                     pushNibble@value:
   310                           	callstack 0
   311                           
   312                           ; 1 bytes @ 0xB
   313  00000C                     	ds	1
   314  00000D                     pushByte@value:
   315                           	callstack 0
   316  00000D                     ___lldiv@counter:
   317                           	callstack 0
   318  00000D                     kpDebounce@i:
   319                           	callstack 0
   320                           
   321                           ; 2 bytes @ 0xC
   322  00000D                     	ds	1
   323  00000E                     ?___llmod:
   324                           	callstack 0
   325  00000E                     lcdCommand@value:
   326                           	callstack 0
   327  00000E                     lcdChar@value:
   328                           	callstack 0
   329  00000E                     ___llmod@dividend:
   330                           	callstack 0
   331                           
   332                           ; 4 bytes @ 0xD
   333  00000E                     	ds	1
   334  00000F                     lcdPosition@line:
   335                           	callstack 0
   336  00000F                     lcdString@msg:
   337                           	callstack 0
   338                           
   339                           ; 2 bytes @ 0xE
   340  00000F                     	ds	2
   341  000011                     ??_lcdString:
   342  000011                     lcdPosition@col:
   343                           	callstack 0
   344                           
   345                           ; 2 bytes @ 0x10
   346  000011                     	ds	1
   347  000012                     ___llmod@divisor:
   348                           	callstack 0
   349                           
   350                           ; 4 bytes @ 0x11
   351  000012                     	ds	1
   352  000013                     lcdString@i:
   353                           	callstack 0
   354                           
   355                           ; 2 bytes @ 0x12
   356  000013                     	ds	3
   357  000016                     ___llmod@counter:
   358                           	callstack 0
   359                           
   360                           ; 1 bytes @ 0x15
   361  000016                     	ds	1
   362  000017                     main@cont:
   363                           	callstack 0
   364                           
   365                           ; 4 bytes @ 0x16
   366  000017                     	ds	4
   367  00001B                     main@rels:
   368                           	callstack 0
   369                           
   370                           ; 4 bytes @ 0x1A
   371  00001B                     	ds	4
   372  00001F                     main@tecla:
   373                           	callstack 0
   374                           
   375                           ; 2 bytes @ 0x1E
   376  00001F                     	ds	2
   377                           
   378 ;;
   379 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   380 ;;
   381 ;; *************** function _main *****************
   382 ;; Defined at:
   383 ;;		line 23 in file "main.c"
   384 ;; Parameters:    Size  Location     Type
   385 ;;		None
   386 ;; Auto vars:     Size  Location     Type
   387 ;;  rels            4   26[COMRAM] unsigned long 
   388 ;;  cont            4   22[COMRAM] unsigned long 
   389 ;;  tecla           2   30[COMRAM] unsigned int 
   390 ;; Return value:  Size  Location     Type
   391 ;;                  1    wreg      void 
   392 ;; Registers used:
   393 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   394 ;; Tracked objects:
   395 ;;		On entry : 0/0
   396 ;;		On exit  : 0/0
   397 ;;		Unchanged: 0/0
   398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   399 ;;      Params:         0       0       0       0       0       0       0
   400 ;;      Locals:        10       0       0       0       0       0       0
   401 ;;      Temps:          0       0       0       0       0       0       0
   402 ;;      Totals:        10       0       0       0       0       0       0
   403 ;;Total ram usage:       10 bytes
   404 ;; Hardware stack levels required when called: 6
   405 ;; This function calls:
   406 ;;		___lldiv
   407 ;;		___llmod
   408 ;;		_kpDebounce
   409 ;;		_kpInit
   410 ;;		_kpRead
   411 ;;		_lcdChar
   412 ;;		_lcdCommand
   413 ;;		_lcdInit
   414 ;;		_lcdPosition
   415 ;;		_lcdString
   416 ;;		_temp
   417 ;; This function is called by:
   418 ;;		Startup code after reset
   419 ;; This function uses a non-reentrant model
   420 ;;
   421                           
   422                           	psect	text0
   423  000ADA                     __ptext0:
   424                           	callstack 0
   425  000ADA                     _main:
   426                           	callstack 25
   427  000ADA                     
   428                           ;main.c: 24:     unsigned long int cont = 1, rels = 1;
   429  000ADA  0E01               	movlw	1
   430  000ADC  6E17               	movwf	main@cont^0,c
   431  000ADE  0E00               	movlw	0
   432  000AE0  6E18               	movwf	(main@cont+1)^0,c
   433  000AE2  0E00               	movlw	0
   434  000AE4  6E19               	movwf	(main@cont+2)^0,c
   435  000AE6  0E00               	movlw	0
   436  000AE8  6E1A               	movwf	(main@cont+3)^0,c
   437  000AEA  0E01               	movlw	1
   438  000AEC  6E1B               	movwf	main@rels^0,c
   439  000AEE  0E00               	movlw	0
   440  000AF0  6E1C               	movwf	(main@rels+1)^0,c
   441  000AF2  0E00               	movlw	0
   442  000AF4  6E1D               	movwf	(main@rels+2)^0,c
   443  000AF6  0E00               	movlw	0
   444  000AF8  6E1E               	movwf	(main@rels+3)^0,c
   445                           
   446                           ;main.c: 25:     unsigned int tecla = 16;
   447  000AFA  0E00               	movlw	0
   448  000AFC  6E20               	movwf	(main@tecla+1)^0,c
   449  000AFE  0E10               	movlw	16
   450  000B00  6E1F               	movwf	main@tecla^0,c
   451  000B02                     
   452                           ;main.c: 27:     lcdPosition(1, 0);
   453  000B02  0E00               	movlw	0
   454  000B04  6E10               	movwf	(lcdPosition@line+1)^0,c
   455  000B06  0E01               	movlw	1
   456  000B08  6E0F               	movwf	lcdPosition@line^0,c
   457  000B0A  0E00               	movlw	0
   458  000B0C  6E12               	movwf	(lcdPosition@col+1)^0,c
   459  000B0E  0E00               	movlw	0
   460  000B10  6E11               	movwf	lcdPosition@col^0,c
   461  000B12  ECB5  F009         	call	_lcdPosition	;wreg free
   462  000B16                     
   463                           ;main.c: 28:     lcdInit();
   464  000B16  ECD4  F007         	call	_lcdInit	;wreg free
   465  000B1A                     
   466                           ;main.c: 29:     kpInit();
   467  000B1A  ECD2  F009         	call	_kpInit	;wreg free
   468  000B1E                     
   469                           ;main.c: 30:     lcdString("Impressora:");
   470  000B1E  0E29               	movlw	low STR_1
   471  000B20  6E0F               	movwf	lcdString@msg^0,c
   472  000B22  0E06               	movlw	high STR_1
   473  000B24  6E10               	movwf	(lcdString@msg+1)^0,c
   474  000B26  EC23  F009         	call	_lcdString	;wreg free
   475  000B2A                     l1822:
   476                           
   477                           ;main.c: 32:         cont++;
   478  000B2A  0E01               	movlw	1
   479  000B2C  2617               	addwf	main@cont^0,f,c
   480  000B2E  0E00               	movlw	0
   481  000B30  2218               	addwfc	(main@cont+1)^0,f,c
   482  000B32  2219               	addwfc	(main@cont+2)^0,f,c
   483  000B34  221A               	addwfc	(main@cont+3)^0,f,c
   484  000B36                     
   485                           ;main.c: 33:         rels++;
   486  000B36  0E01               	movlw	1
   487  000B38  261B               	addwf	main@rels^0,f,c
   488  000B3A  0E00               	movlw	0
   489  000B3C  221C               	addwfc	(main@rels+1)^0,f,c
   490  000B3E  221D               	addwfc	(main@rels+2)^0,f,c
   491  000B40  221E               	addwfc	(main@rels+3)^0,f,c
   492  000B42                     
   493                           ;main.c: 34:         lcdPosition(1, 0);
   494  000B42  0E00               	movlw	0
   495  000B44  6E10               	movwf	(lcdPosition@line+1)^0,c
   496  000B46  0E01               	movlw	1
   497  000B48  6E0F               	movwf	lcdPosition@line^0,c
   498  000B4A  0E00               	movlw	0
   499  000B4C  6E12               	movwf	(lcdPosition@col+1)^0,c
   500  000B4E  0E00               	movlw	0
   501  000B50  6E11               	movwf	lcdPosition@col^0,c
   502  000B52  ECB5  F009         	call	_lcdPosition	;wreg free
   503  000B56                     
   504                           ;main.c: 36:         lcdString("Copias:");
   505  000B56  0E35               	movlw	low STR_2
   506  000B58  6E0F               	movwf	lcdString@msg^0,c
   507  000B5A  0E06               	movlw	high STR_2
   508  000B5C  6E10               	movwf	(lcdString@msg+1)^0,c
   509  000B5E  EC23  F009         	call	_lcdString	;wreg free
   510  000B62                     
   511                           ;main.c: 37:         lcdChar(((rels / 10000000) % 10) + 48);
   512  000B62  0E80               	movlw	128
   513  000B64  6E05               	movwf	___lldiv@divisor^0,c
   514  000B66  0E96               	movlw	150
   515  000B68  6E06               	movwf	(___lldiv@divisor+1)^0,c
   516  000B6A  0E98               	movlw	152
   517  000B6C  6E07               	movwf	(___lldiv@divisor+2)^0,c
   518  000B6E  0E00               	movlw	0
   519  000B70  6E08               	movwf	(___lldiv@divisor+3)^0,c
   520  000B72  C01B  F001         	movff	main@rels,___lldiv@dividend
   521  000B76  C01C  F002         	movff	main@rels+1,___lldiv@dividend+1
   522  000B7A  C01D  F003         	movff	main@rels+2,___lldiv@dividend+2
   523  000B7E  C01E  F004         	movff	main@rels+3,___lldiv@dividend+3
   524  000B82  EC2E  F008         	call	___lldiv	;wreg free
   525  000B86  C001  F00E         	movff	?___lldiv,___llmod@dividend
   526  000B8A  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
   527  000B8E  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
   528  000B92  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
   529  000B96  0E0A               	movlw	10
   530  000B98  6E12               	movwf	___llmod@divisor^0,c
   531  000B9A  0E00               	movlw	0
   532  000B9C  6E13               	movwf	(___llmod@divisor+1)^0,c
   533  000B9E  0E00               	movlw	0
   534  000BA0  6E14               	movwf	(___llmod@divisor+2)^0,c
   535  000BA2  0E00               	movlw	0
   536  000BA4  6E15               	movwf	(___llmod@divisor+3)^0,c
   537  000BA6  EC80  F008         	call	___llmod	;wreg free
   538  000BAA  500E               	movf	?___llmod^0,w,c
   539  000BAC  0F30               	addlw	48
   540  000BAE  EC40  F00A         	call	_lcdChar
   541  000BB2                     
   542                           ;main.c: 38:         lcdChar(((cont/ 10000000) % 10) + 48);
   543  000BB2  0E80               	movlw	128
   544  000BB4  6E05               	movwf	___lldiv@divisor^0,c
   545  000BB6  0E96               	movlw	150
   546  000BB8  6E06               	movwf	(___lldiv@divisor+1)^0,c
   547  000BBA  0E98               	movlw	152
   548  000BBC  6E07               	movwf	(___lldiv@divisor+2)^0,c
   549  000BBE  0E00               	movlw	0
   550  000BC0  6E08               	movwf	(___lldiv@divisor+3)^0,c
   551  000BC2  C017  F001         	movff	main@cont,___lldiv@dividend
   552  000BC6  C018  F002         	movff	main@cont+1,___lldiv@dividend+1
   553  000BCA  C019  F003         	movff	main@cont+2,___lldiv@dividend+2
   554  000BCE  C01A  F004         	movff	main@cont+3,___lldiv@dividend+3
   555  000BD2  EC2E  F008         	call	___lldiv	;wreg free
   556  000BD6  C001  F00E         	movff	?___lldiv,___llmod@dividend
   557  000BDA  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
   558  000BDE  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
   559  000BE2  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
   560  000BE6  0E0A               	movlw	10
   561  000BE8  6E12               	movwf	___llmod@divisor^0,c
   562  000BEA  0E00               	movlw	0
   563  000BEC  6E13               	movwf	(___llmod@divisor+1)^0,c
   564  000BEE  0E00               	movlw	0
   565  000BF0  6E14               	movwf	(___llmod@divisor+2)^0,c
   566  000BF2  0E00               	movlw	0
   567  000BF4  6E15               	movwf	(___llmod@divisor+3)^0,c
   568  000BF6  EC80  F008         	call	___llmod	;wreg free
   569  000BFA  500E               	movf	?___llmod^0,w,c
   570  000BFC  0F30               	addlw	48
   571  000BFE  EC40  F00A         	call	_lcdChar
   572  000C02                     
   573                           ;main.c: 42:         kpDebounce();
   574  000C02  EC39  F007         	call	_kpDebounce	;wreg free
   575  000C06                     
   576                           ;main.c: 44:         if (kpRead() != tecla) {
   577  000C06  EC69  F00A         	call	_kpRead	;wreg free
   578  000C0A  501F               	movf	main@tecla^0,w,c
   579  000C0C  1801               	xorwf	?_kpRead^0,w,c
   580  000C0E  E109               	bnz	u1650
   581  000C10  5020               	movf	(main@tecla+1)^0,w,c
   582  000C12  1802               	xorwf	(?_kpRead+1)^0,w,c
   583  000C14  B4D8               	btfsc	status,2,c
   584  000C16  EF0F  F006         	goto	u1651
   585  000C1A  EF11  F006         	goto	u1650
   586  000C1E                     u1651:
   587  000C1E  EF95  F005         	goto	l1822
   588  000C22                     u1650:
   589  000C22                     
   590                           ;main.c: 45:             tecla = kpRead();
   591  000C22  EC69  F00A         	call	_kpRead	;wreg free
   592  000C26  C001  F01F         	movff	?_kpRead,main@tecla
   593  000C2A  C002  F020         	movff	?_kpRead+1,main@tecla+1
   594  000C2E                     
   595                           ;main.c: 47:             if (((tecla) & (1<<(9)))) cont += 10000000;
   596  000C2E  A220               	btfss	(main@tecla+1)^0,1,c
   597  000C30  EF1C  F006         	goto	u1661
   598  000C34  EF1E  F006         	goto	u1660
   599  000C38                     u1661:
   600  000C38  EF26  F006         	goto	l1844
   601  000C3C                     u1660:
   602  000C3C  0E80               	movlw	128
   603  000C3E  2617               	addwf	main@cont^0,f,c
   604  000C40  0E96               	movlw	150
   605  000C42  2218               	addwfc	(main@cont+1)^0,f,c
   606  000C44  0E98               	movlw	152
   607  000C46  2219               	addwfc	(main@cont+2)^0,f,c
   608  000C48  0E00               	movlw	0
   609  000C4A  221A               	addwfc	(main@cont+3)^0,f,c
   610  000C4C                     l1844:
   611                           
   612                           ;main.c: 48:             if (((tecla) & (1<<(6)))) rels += 10000000;
   613  000C4C  AC1F               	btfss	main@tecla^0,6,c
   614  000C4E  EF2B  F006         	goto	u1671
   615  000C52  EF2D  F006         	goto	u1670
   616  000C56                     u1671:
   617  000C56  EF35  F006         	goto	l1848
   618  000C5A                     u1670:
   619  000C5A  0E80               	movlw	128
   620  000C5C  261B               	addwf	main@rels^0,f,c
   621  000C5E  0E96               	movlw	150
   622  000C60  221C               	addwfc	(main@rels+1)^0,f,c
   623  000C62  0E98               	movlw	152
   624  000C64  221D               	addwfc	(main@rels+2)^0,f,c
   625  000C66  0E00               	movlw	0
   626  000C68  221E               	addwfc	(main@rels+3)^0,f,c
   627  000C6A                     l1848:
   628                           
   629                           ;main.c: 49:             if (((tecla) & (1<<(8)))) rels -= 10000000;
   630  000C6A  A020               	btfss	(main@tecla+1)^0,0,c
   631  000C6C  EF3A  F006         	goto	u1681
   632  000C70  EF3C  F006         	goto	u1680
   633  000C74                     u1681:
   634  000C74  EF44  F006         	goto	l1852
   635  000C78                     u1680:
   636  000C78  0E80               	movlw	128
   637  000C7A  5E1B               	subwf	main@rels^0,f,c
   638  000C7C  0E96               	movlw	150
   639  000C7E  5A1C               	subwfb	(main@rels+1)^0,f,c
   640  000C80  0E98               	movlw	152
   641  000C82  5A1D               	subwfb	(main@rels+2)^0,f,c
   642  000C84  0E00               	movlw	0
   643  000C86  5A1E               	subwfb	(main@rels+3)^0,f,c
   644  000C88                     l1852:
   645                           
   646                           ;main.c: 50:             if (((tecla) & (1<<(4)))) cont -= 10000000;
   647  000C88  A81F               	btfss	main@tecla^0,4,c
   648  000C8A  EF49  F006         	goto	u1691
   649  000C8E  EF4B  F006         	goto	u1690
   650  000C92                     u1691:
   651  000C92  EF53  F006         	goto	l1856
   652  000C96                     u1690:
   653  000C96  0E80               	movlw	128
   654  000C98  5E17               	subwf	main@cont^0,f,c
   655  000C9A  0E96               	movlw	150
   656  000C9C  5A18               	subwfb	(main@cont+1)^0,f,c
   657  000C9E  0E98               	movlw	152
   658  000CA0  5A19               	subwfb	(main@cont+2)^0,f,c
   659  000CA2  0E00               	movlw	0
   660  000CA4  5A1A               	subwfb	(main@cont+3)^0,f,c
   661  000CA6                     l1856:
   662                           
   663                           ;main.c: 51:             if (((tecla) & (1<<(7)))) {
   664  000CA6  AE1F               	btfss	main@tecla^0,7,c
   665  000CA8  EF58  F006         	goto	u1701
   666  000CAC  EF5A  F006         	goto	u1700
   667  000CB0                     u1701:
   668  000CB0  EF95  F005         	goto	l1822
   669  000CB4                     u1700:
   670  000CB4                     
   671                           ;main.c: 52:                 lcdCommand(0x01);
   672  000CB4  0E01               	movlw	1
   673  000CB6  EC4F  F00A         	call	_lcdCommand
   674  000CBA                     
   675                           ;main.c: 53:                 lcdString("Imprimindo...");
   676  000CBA  0E1B               	movlw	low STR_3
   677  000CBC  6E0F               	movwf	lcdString@msg^0,c
   678  000CBE  0E06               	movlw	high STR_3
   679  000CC0  6E10               	movwf	(lcdString@msg+1)^0,c
   680  000CC2  EC23  F009         	call	_lcdString	;wreg free
   681  000CC6                     
   682                           ;main.c: 54:                 TRISD = 0x00;
   683  000CC6  0E00               	movlw	0
   684  000CC8  6E95               	movwf	149,c	;volatile
   685  000CCA                     
   686                           ;main.c: 55:                 PORTD = 0x01;
   687  000CCA  0E01               	movlw	1
   688  000CCC  6E83               	movwf	131,c	;volatile
   689  000CCE                     
   690                           ;main.c: 57:                 temp(5000);
   691  000CCE  0E13               	movlw	19
   692  000CD0  6E02               	movwf	(temp@X+1)^0,c
   693  000CD2  0E88               	movlw	136
   694  000CD4  6E01               	movwf	temp@X^0,c
   695  000CD6  ECC4  F008         	call	_temp	;wreg free
   696  000CDA                     
   697                           ;main.c: 58:                 PORTD = 0x02;
   698  000CDA  0E02               	movlw	2
   699  000CDC  6E83               	movwf	131,c	;volatile
   700  000CDE                     
   701                           ;main.c: 60:                 temp(10000);
   702  000CDE  0E27               	movlw	39
   703  000CE0  6E02               	movwf	(temp@X+1)^0,c
   704  000CE2  0E10               	movlw	16
   705  000CE4  6E01               	movwf	temp@X^0,c
   706  000CE6  ECC4  F008         	call	_temp	;wreg free
   707  000CEA                     
   708                           ;main.c: 61:                 PORTD = 0x03;
   709  000CEA  0E03               	movlw	3
   710  000CEC  6E83               	movwf	131,c	;volatile
   711  000CEE                     
   712                           ;main.c: 62:                 lcdCommand(0x01);
   713  000CEE  0E01               	movlw	1
   714  000CF0  EC4F  F00A         	call	_lcdCommand
   715                           
   716                           ;main.c: 63:                 lcdString("Impressora:");
   717  000CF4  0E29               	movlw	low STR_1
   718  000CF6  6E0F               	movwf	lcdString@msg^0,c
   719  000CF8  0E06               	movlw	high STR_1
   720  000CFA  6E10               	movwf	(lcdString@msg+1)^0,c
   721  000CFC  EC23  F009         	call	_lcdString	;wreg free
   722  000D00  EF95  F005         	goto	l1822
   723  000D04  EF00  F000         	goto	start
   724  000D08                     __end_of_main:
   725                           	callstack 0
   726                           
   727 ;; *************** function _temp *****************
   728 ;; Defined at:
   729 ;;		line 11 in file "main.c"
   730 ;; Parameters:    Size  Location     Type
   731 ;;  X               2    0[COMRAM] unsigned int 
   732 ;; Auto vars:     Size  Location     Type
   733 ;;  k               1    5[COMRAM] volatile unsigned char 
   734 ;;  j               1    4[COMRAM] volatile unsigned char 
   735 ;;  i               2    2[COMRAM] unsigned int 
   736 ;; Return value:  Size  Location     Type
   737 ;;                  1    wreg      void 
   738 ;; Registers used:
   739 ;;		wreg, status,2, status,0
   740 ;; Tracked objects:
   741 ;;		On entry : 0/0
   742 ;;		On exit  : 0/0
   743 ;;		Unchanged: 0/0
   744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   745 ;;      Params:         2       0       0       0       0       0       0
   746 ;;      Locals:         4       0       0       0       0       0       0
   747 ;;      Temps:          0       0       0       0       0       0       0
   748 ;;      Totals:         6       0       0       0       0       0       0
   749 ;;Total ram usage:        6 bytes
   750 ;; Hardware stack levels used: 1
   751 ;; This function calls:
   752 ;;		Nothing
   753 ;; This function is called by:
   754 ;;		_main
   755 ;; This function uses a non-reentrant model
   756 ;;
   757                           
   758                           	psect	text1
   759  001188                     __ptext1:
   760                           	callstack 0
   761  001188                     _temp:
   762                           	callstack 30
   763  001188                     
   764                           ;main.c: 13:     unsigned int i;;main.c: 14:     for (i = 0; i < X; i++) {
   765  001188  0E00               	movlw	0
   766  00118A  6E04               	movwf	(temp@i+1)^0,c
   767  00118C  0E00               	movlw	0
   768  00118E  6E03               	movwf	temp@i^0,c
   769  001190  EFEA  F008         	goto	l1706
   770  001194                     l1684:
   771                           
   772                           ;main.c: 15:         volatile unsigned char j, k;;main.c: 16:         for (j = 0; j < 41
      +                          ; j++) {
   773  001194  0E00               	movlw	0
   774  001196  6E05               	movwf	temp@j^0,c	;volatile
   775  001198                     l1686:
   776  001198  0E28               	movlw	40
   777  00119A  6405               	cpfsgt	temp@j^0,c	;volatile
   778  00119C  EFD2  F008         	goto	u1451
   779  0011A0  EFD4  F008         	goto	u1450
   780  0011A4                     u1451:
   781  0011A4  EFD6  F008         	goto	l1690
   782  0011A8                     u1450:
   783  0011A8  EFE8  F008         	goto	l1704
   784  0011AC                     l1690:
   785                           
   786                           ;main.c: 17:             for (k = 0; k < 3; k++);
   787  0011AC  0E00               	movlw	0
   788  0011AE  6E06               	movwf	temp@k^0,c	;volatile
   789  0011B0                     l1692:
   790  0011B0  0E02               	movlw	2
   791  0011B2  6406               	cpfsgt	temp@k^0,c	;volatile
   792  0011B4  EFDE  F008         	goto	u1461
   793  0011B8  EFE0  F008         	goto	u1460
   794  0011BC                     u1461:
   795  0011BC  EFE2  F008         	goto	l1696
   796  0011C0                     u1460:
   797  0011C0  EFE5  F008         	goto	l1700
   798  0011C4                     l1696:
   799  0011C4  2A06               	incf	temp@k^0,f,c	;volatile
   800  0011C6  EFD8  F008         	goto	l1692
   801  0011CA                     l1700:
   802                           
   803                           ;main.c: 19:         }
   804  0011CA  2A05               	incf	temp@j^0,f,c	;volatile
   805  0011CC  EFCC  F008         	goto	l1686
   806  0011D0                     l1704:
   807                           
   808                           ;main.c: 20:     }
   809  0011D0  4A03               	infsnz	temp@i^0,f,c
   810  0011D2  2A04               	incf	(temp@i+1)^0,f,c
   811  0011D4                     l1706:
   812  0011D4  5001               	movf	temp@X^0,w,c
   813  0011D6  5C03               	subwf	temp@i^0,w,c
   814  0011D8  5002               	movf	(temp@X+1)^0,w,c
   815  0011DA  5804               	subwfb	(temp@i+1)^0,w,c
   816  0011DC  A0D8               	btfss	status,0,c
   817  0011DE  EFF3  F008         	goto	u1471
   818  0011E2  EFF5  F008         	goto	u1470
   819  0011E6                     u1471:
   820  0011E6  EFCA  F008         	goto	l1684
   821  0011EA                     u1470:
   822  0011EA  0012               	return		;funcret
   823  0011EC                     __end_of_temp:
   824                           	callstack 0
   825                           
   826 ;; *************** function _lcdString *****************
   827 ;; Defined at:
   828 ;;		line 57 in file "lcd.c"
   829 ;; Parameters:    Size  Location     Type
   830 ;;  msg             2   14[COMRAM] PTR unsigned char 
   831 ;;		 -> STR_4(12), STR_3(14), STR_2(8), STR_1(12), 
   832 ;; Auto vars:     Size  Location     Type
   833 ;;  i               2   18[COMRAM] int 
   834 ;; Return value:  Size  Location     Type
   835 ;;                  1    wreg      void 
   836 ;; Registers used:
   837 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   838 ;; Tracked objects:
   839 ;;		On entry : 0/0
   840 ;;		On exit  : 0/0
   841 ;;		Unchanged: 0/0
   842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   843 ;;      Params:         2       0       0       0       0       0       0
   844 ;;      Locals:         2       0       0       0       0       0       0
   845 ;;      Temps:          2       0       0       0       0       0       0
   846 ;;      Totals:         6       0       0       0       0       0       0
   847 ;;Total ram usage:        6 bytes
   848 ;; Hardware stack levels used: 1
   849 ;; Hardware stack levels required when called: 5
   850 ;; This function calls:
   851 ;;		_lcdChar
   852 ;; This function is called by:
   853 ;;		_main
   854 ;; This function uses a non-reentrant model
   855 ;;
   856                           
   857                           	psect	text2
   858  001246                     __ptext2:
   859                           	callstack 0
   860  001246                     _lcdString:
   861                           	callstack 25
   862  001246                     
   863                           ;lcd.c: 58:  int i = 0;
   864  001246  0E00               	movlw	0
   865  001248  6E14               	movwf	(lcdString@i+1)^0,c
   866  00124A  0E00               	movlw	0
   867  00124C  6E13               	movwf	lcdString@i^0,c
   868                           
   869                           ;lcd.c: 59:  while (msg[i] != 0) {
   870  00124E  EF39  F009         	goto	l1742
   871  001252                     l1738:
   872                           
   873                           ;lcd.c: 60:   lcdChar(msg[i]);
   874  001252  5013               	movf	lcdString@i^0,w,c
   875  001254  240F               	addwf	lcdString@msg^0,w,c
   876  001256  6E11               	movwf	??_lcdString^0,c
   877  001258  5014               	movf	(lcdString@i+1)^0,w,c
   878  00125A  2010               	addwfc	(lcdString@msg+1)^0,w,c
   879  00125C  6E12               	movwf	(??_lcdString+1)^0,c
   880  00125E  C011  FFF6         	movff	??_lcdString,tblptrl
   881  001262  C012  FFF7         	movff	??_lcdString+1,tblptrh
   882  001266                     	if	0	;tblptru may be non-zero
   883  001266                     	endif
   884  001266                     	if	0	;tblptru may be non-zero
   885  001266                     	endif
   886  001266  0008               	tblrd		*
   887  001268  50F5               	movf	tablat,w,c
   888  00126A  EC40  F00A         	call	_lcdChar
   889  00126E                     
   890                           ;lcd.c: 61:   i++;
   891  00126E  4A13               	infsnz	lcdString@i^0,f,c
   892  001270  2A14               	incf	(lcdString@i+1)^0,f,c
   893  001272                     l1742:
   894                           
   895                           ;lcd.c: 59:  while (msg[i] != 0) {
   896  001272  5013               	movf	lcdString@i^0,w,c
   897  001274  240F               	addwf	lcdString@msg^0,w,c
   898  001276  6E11               	movwf	??_lcdString^0,c
   899  001278  5014               	movf	(lcdString@i+1)^0,w,c
   900  00127A  2010               	addwfc	(lcdString@msg+1)^0,w,c
   901  00127C  6E12               	movwf	(??_lcdString+1)^0,c
   902  00127E  C011  FFF6         	movff	??_lcdString,tblptrl
   903  001282  C012  FFF7         	movff	??_lcdString+1,tblptrh
   904  001286                     	if	0	;tblptru may be non-zero
   905  001286                     	endif
   906  001286                     	if	0	;tblptru may be non-zero
   907  001286                     	endif
   908  001286  0008               	tblrd		*
   909  001288  50F5               	movf	tablat,w,c
   910  00128A  0900               	iorlw	0
   911  00128C  A4D8               	btfss	status,2,c
   912  00128E  EF4B  F009         	goto	u1501
   913  001292  EF4D  F009         	goto	u1500
   914  001296                     u1501:
   915  001296  EF29  F009         	goto	l1738
   916  00129A                     u1500:
   917  00129A  0012               	return		;funcret
   918  00129C                     __end_of_lcdString:
   919                           	callstack 0
   920                           
   921 ;; *************** function _lcdChar *****************
   922 ;; Defined at:
   923 ;;		line 52 in file "lcd.c"
   924 ;; Parameters:    Size  Location     Type
   925 ;;  value           1    wreg     unsigned char 
   926 ;; Auto vars:     Size  Location     Type
   927 ;;  value           1   13[COMRAM] unsigned char 
   928 ;; Return value:  Size  Location     Type
   929 ;;                  1    wreg      void 
   930 ;; Registers used:
   931 ;;		wreg, status,2, status,0, cstack
   932 ;; Tracked objects:
   933 ;;		On entry : 0/0
   934 ;;		On exit  : 0/0
   935 ;;		Unchanged: 0/0
   936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   937 ;;      Params:         0       0       0       0       0       0       0
   938 ;;      Locals:         1       0       0       0       0       0       0
   939 ;;      Temps:          0       0       0       0       0       0       0
   940 ;;      Totals:         1       0       0       0       0       0       0
   941 ;;Total ram usage:        1 bytes
   942 ;; Hardware stack levels used: 1
   943 ;; Hardware stack levels required when called: 4
   944 ;; This function calls:
   945 ;;		_delayMicro
   946 ;;		_pushByte
   947 ;; This function is called by:
   948 ;;		_main
   949 ;;		_lcdString
   950 ;;		_lcdNumber
   951 ;; This function uses a non-reentrant model
   952 ;;
   953                           
   954                           	psect	text3
   955  001480                     __ptext3:
   956                           	callstack 0
   957  001480                     _lcdChar:
   958                           	callstack 25
   959                           
   960                           ;incstack = 0
   961                           ;lcdChar@value stored from wreg
   962  001480  6E0E               	movwf	lcdChar@value^0,c
   963  001482                     
   964                           ;lcd.c: 53:  pushByte(value, 1);
   965  001482  0E00               	movlw	0
   966  001484  6E0B               	movwf	(pushByte@rs+1)^0,c
   967  001486  0E01               	movlw	1
   968  001488  6E0A               	movwf	pushByte@rs^0,c
   969  00148A  500E               	movf	lcdChar@value^0,w,c
   970  00148C  ECF6  F008         	call	_pushByte
   971  001490                     
   972                           ;lcd.c: 54:  delayMicro(80);
   973  001490  0E00               	movlw	0
   974  001492  6E02               	movwf	(delayMicro@a+1)^0,c
   975  001494  0E50               	movlw	80
   976  001496  6E01               	movwf	delayMicro@a^0,c
   977  001498  EC6E  F00A         	call	_delayMicro	;wreg free
   978  00149C  0012               	return		;funcret
   979  00149E                     __end_of_lcdChar:
   980                           	callstack 0
   981                           
   982 ;; *************** function _lcdPosition *****************
   983 ;; Defined at:
   984 ;;		line 44 in file "lcd.c"
   985 ;; Parameters:    Size  Location     Type
   986 ;;  line            2   14[COMRAM] int 
   987 ;;  col             2   16[COMRAM] int 
   988 ;; Auto vars:     Size  Location     Type
   989 ;;		None
   990 ;; Return value:  Size  Location     Type
   991 ;;                  1    wreg      void 
   992 ;; Registers used:
   993 ;;		wreg, status,2, status,0, cstack
   994 ;; Tracked objects:
   995 ;;		On entry : 0/0
   996 ;;		On exit  : 0/0
   997 ;;		Unchanged: 0/0
   998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   999 ;;      Params:         4       0       0       0       0       0       0
  1000 ;;      Locals:         0       0       0       0       0       0       0
  1001 ;;      Temps:          0       0       0       0       0       0       0
  1002 ;;      Totals:         4       0       0       0       0       0       0
  1003 ;;Total ram usage:        4 bytes
  1004 ;; Hardware stack levels used: 1
  1005 ;; Hardware stack levels required when called: 5
  1006 ;; This function calls:
  1007 ;;		_lcdCommand
  1008 ;; This function is called by:
  1009 ;;		_main
  1010 ;; This function uses a non-reentrant model
  1011 ;;
  1012                           
  1013                           	psect	text4
  1014  00136A                     __ptext4:
  1015                           	callstack 0
  1016  00136A                     _lcdPosition:
  1017                           	callstack 25
  1018  00136A                     
  1019                           ;lcd.c: 45:  if (line == 0) {
  1020  00136A  500F               	movf	lcdPosition@line^0,w,c
  1021  00136C  1010               	iorwf	(lcdPosition@line+1)^0,w,c
  1022  00136E  A4D8               	btfss	status,2,c
  1023  001370  EFBC  F009         	goto	u1481
  1024  001374  EFBE  F009         	goto	u1480
  1025  001378                     u1481:
  1026  001378  EFC3  F009         	goto	l1712
  1027  00137C                     u1480:
  1028  00137C                     
  1029                           ;lcd.c: 46:   lcdCommand(0x80 + (col % 16));
  1030  00137C  5011               	movf	lcdPosition@col^0,w,c
  1031  00137E  0B0F               	andlw	15
  1032  001380  0F80               	addlw	128
  1033  001382  EC4F  F00A         	call	_lcdCommand
  1034  001386                     l1712:
  1035                           
  1036                           ;lcd.c: 48:  if (line == 1) {
  1037  001386  040F               	decf	lcdPosition@line^0,w,c
  1038  001388  1010               	iorwf	(lcdPosition@line+1)^0,w,c
  1039  00138A  A4D8               	btfss	status,2,c
  1040  00138C  EFCA  F009         	goto	u1491
  1041  001390  EFCC  F009         	goto	u1490
  1042  001394                     u1491:
  1043  001394  EFD1  F009         	goto	l119
  1044  001398                     u1490:
  1045  001398                     
  1046                           ;lcd.c: 49:   lcdCommand(0xC0 + (col % 16));
  1047  001398  5011               	movf	lcdPosition@col^0,w,c
  1048  00139A  0B0F               	andlw	15
  1049  00139C  0FC0               	addlw	192
  1050  00139E  EC4F  F00A         	call	_lcdCommand
  1051  0013A2                     l119:
  1052  0013A2  0012               	return		;funcret
  1053  0013A4                     __end_of_lcdPosition:
  1054                           	callstack 0
  1055                           
  1056 ;; *************** function _lcdInit *****************
  1057 ;; Defined at:
  1058 ;;		line 72 in file "lcd.c"
  1059 ;; Parameters:    Size  Location     Type
  1060 ;;		None
  1061 ;; Auto vars:     Size  Location     Type
  1062 ;;		None
  1063 ;; Return value:  Size  Location     Type
  1064 ;;                  1    wreg      void 
  1065 ;; Registers used:
  1066 ;;		wreg, status,2, status,0, cstack
  1067 ;; Tracked objects:
  1068 ;;		On entry : 0/0
  1069 ;;		On exit  : 0/0
  1070 ;;		Unchanged: 0/0
  1071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1072 ;;      Params:         0       0       0       0       0       0       0
  1073 ;;      Locals:         0       0       0       0       0       0       0
  1074 ;;      Temps:          0       0       0       0       0       0       0
  1075 ;;      Totals:         0       0       0       0       0       0       0
  1076 ;;Total ram usage:        0 bytes
  1077 ;; Hardware stack levels used: 1
  1078 ;; Hardware stack levels required when called: 5
  1079 ;; This function calls:
  1080 ;;		_delayMicro
  1081 ;;		_delayMili
  1082 ;;		_lcdCommand
  1083 ;;		_pinMode
  1084 ;;		_pushNibble
  1085 ;;		_soInit
  1086 ;; This function is called by:
  1087 ;;		_main
  1088 ;; This function uses a non-reentrant model
  1089 ;;
  1090                           
  1091                           	psect	text5
  1092  000FA8                     __ptext5:
  1093                           	callstack 0
  1094  000FA8                     _lcdInit:
  1095                           	callstack 25
  1096  000FA8                     
  1097                           ;lcd.c: 73:  pinMode(PIN_D4, 0);
  1098  000FA8  0E00               	movlw	0
  1099  000FAA  6E02               	movwf	(pinMode@pin+1)^0,c
  1100  000FAC  0E1C               	movlw	28
  1101  000FAE  6E01               	movwf	pinMode@pin^0,c
  1102  000FB0  0E00               	movlw	0
  1103  000FB2  6E04               	movwf	(pinMode@type+1)^0,c
  1104  000FB4  0E00               	movlw	0
  1105  000FB6  6E03               	movwf	pinMode@type^0,c
  1106  000FB8  EC1F  F003         	call	_pinMode	;wreg free
  1107                           
  1108                           ;lcd.c: 74:  pinMode(PIN_D5, 0);
  1109  000FBC  0E00               	movlw	0
  1110  000FBE  6E02               	movwf	(pinMode@pin+1)^0,c
  1111  000FC0  0E1D               	movlw	29
  1112  000FC2  6E01               	movwf	pinMode@pin^0,c
  1113  000FC4  0E00               	movlw	0
  1114  000FC6  6E04               	movwf	(pinMode@type+1)^0,c
  1115  000FC8  0E00               	movlw	0
  1116  000FCA  6E03               	movwf	pinMode@type^0,c
  1117  000FCC  EC1F  F003         	call	_pinMode	;wreg free
  1118                           
  1119                           ;lcd.c: 75:  soInit();
  1120  000FD0  EC96  F009         	call	_soInit	;wreg free
  1121                           
  1122                           ;lcd.c: 76:  delayMili(15);
  1123  000FD4  0E00               	movlw	0
  1124  000FD6  6E02               	movwf	(delayMili@a+1)^0,c
  1125  000FD8  0E0F               	movlw	15
  1126  000FDA  6E01               	movwf	delayMili@a^0,c
  1127  000FDC  ECEB  F009         	call	_delayMili	;wreg free
  1128                           
  1129                           ;lcd.c: 78:  pushNibble(0x03, 0);
  1130  000FE0  0E00               	movlw	0
  1131  000FE2  6E0B               	movwf	(pushNibble@rs+1)^0,c
  1132  000FE4  0E00               	movlw	0
  1133  000FE6  6E0A               	movwf	pushNibble@rs^0,c
  1134  000FE8  0E03               	movlw	3
  1135  000FEA  EC2D  F00A         	call	_pushNibble
  1136                           
  1137                           ;lcd.c: 79:  delayMili(5);
  1138  000FEE  0E00               	movlw	0
  1139  000FF0  6E02               	movwf	(delayMili@a+1)^0,c
  1140  000FF2  0E05               	movlw	5
  1141  000FF4  6E01               	movwf	delayMili@a^0,c
  1142  000FF6  ECEB  F009         	call	_delayMili	;wreg free
  1143                           
  1144                           ;lcd.c: 80:  pushNibble(0x03, 0);
  1145  000FFA  0E00               	movlw	0
  1146  000FFC  6E0B               	movwf	(pushNibble@rs+1)^0,c
  1147  000FFE  0E00               	movlw	0
  1148  001000  6E0A               	movwf	pushNibble@rs^0,c
  1149  001002  0E03               	movlw	3
  1150  001004  EC2D  F00A         	call	_pushNibble
  1151  001008                     
  1152                           ;lcd.c: 81:  delayMicro(160);
  1153  001008  0E00               	movlw	0
  1154  00100A  6E02               	movwf	(delayMicro@a+1)^0,c
  1155  00100C  0EA0               	movlw	160
  1156  00100E  6E01               	movwf	delayMicro@a^0,c
  1157  001010  EC6E  F00A         	call	_delayMicro	;wreg free
  1158  001014                     
  1159                           ;lcd.c: 82:  pushNibble(0x03, 0);
  1160  001014  0E00               	movlw	0
  1161  001016  6E0B               	movwf	(pushNibble@rs+1)^0,c
  1162  001018  0E00               	movlw	0
  1163  00101A  6E0A               	movwf	pushNibble@rs^0,c
  1164  00101C  0E03               	movlw	3
  1165  00101E  EC2D  F00A         	call	_pushNibble
  1166                           
  1167                           ;lcd.c: 83:  delayMicro(160);
  1168  001022  0E00               	movlw	0
  1169  001024  6E02               	movwf	(delayMicro@a+1)^0,c
  1170  001026  0EA0               	movlw	160
  1171  001028  6E01               	movwf	delayMicro@a^0,c
  1172  00102A  EC6E  F00A         	call	_delayMicro	;wreg free
  1173  00102E                     
  1174                           ;lcd.c: 85:  pushNibble(0x02, 0);
  1175  00102E  0E00               	movlw	0
  1176  001030  6E0B               	movwf	(pushNibble@rs+1)^0,c
  1177  001032  0E00               	movlw	0
  1178  001034  6E0A               	movwf	pushNibble@rs^0,c
  1179  001036  0E02               	movlw	2
  1180  001038  EC2D  F00A         	call	_pushNibble
  1181  00103C                     
  1182                           ;lcd.c: 86:  delayMili(10);
  1183  00103C  0E00               	movlw	0
  1184  00103E  6E02               	movwf	(delayMili@a+1)^0,c
  1185  001040  0E0A               	movlw	10
  1186  001042  6E01               	movwf	delayMili@a^0,c
  1187  001044  ECEB  F009         	call	_delayMili	;wreg free
  1188  001048                     
  1189                           ;lcd.c: 88:  lcdCommand(0x28);
  1190  001048  0E28               	movlw	40
  1191  00104A  EC4F  F00A         	call	_lcdCommand
  1192  00104E                     
  1193                           ;lcd.c: 89:  lcdCommand(0x08 + 0x04);
  1194  00104E  0E0C               	movlw	12
  1195  001050  EC4F  F00A         	call	_lcdCommand
  1196  001054                     
  1197                           ;lcd.c: 90:  lcdCommand(0x01);
  1198  001054  0E01               	movlw	1
  1199  001056  EC4F  F00A         	call	_lcdCommand
  1200  00105A  0012               	return		;funcret
  1201  00105C                     __end_of_lcdInit:
  1202                           	callstack 0
  1203                           
  1204 ;; *************** function _pushNibble *****************
  1205 ;; Defined at:
  1206 ;;		line 25 in file "lcd.c"
  1207 ;; Parameters:    Size  Location     Type
  1208 ;;  value           1    wreg     unsigned char 
  1209 ;;  rs              2    9[COMRAM] int 
  1210 ;; Auto vars:     Size  Location     Type
  1211 ;;  value           1   11[COMRAM] unsigned char 
  1212 ;; Return value:  Size  Location     Type
  1213 ;;                  1    wreg      void 
  1214 ;; Registers used:
  1215 ;;		wreg, status,2, status,0, cstack
  1216 ;; Tracked objects:
  1217 ;;		On entry : 0/0
  1218 ;;		On exit  : 0/0
  1219 ;;		Unchanged: 0/0
  1220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1221 ;;      Params:         2       0       0       0       0       0       0
  1222 ;;      Locals:         1       0       0       0       0       0       0
  1223 ;;      Temps:          0       0       0       0       0       0       0
  1224 ;;      Totals:         3       0       0       0       0       0       0
  1225 ;;Total ram usage:        3 bytes
  1226 ;; Hardware stack levels used: 1
  1227 ;; Hardware stack levels required when called: 3
  1228 ;; This function calls:
  1229 ;;		_digitalWrite
  1230 ;;		_pulseEnablePin
  1231 ;;		_soWrite
  1232 ;; This function is called by:
  1233 ;;		_lcdInit
  1234 ;; This function uses a non-reentrant model
  1235 ;;
  1236                           
  1237                           	psect	text6
  1238  00145A                     __ptext6:
  1239                           	callstack 0
  1240  00145A                     _pushNibble:
  1241                           	callstack 26
  1242                           
  1243                           ;incstack = 0
  1244                           ;pushNibble@value stored from wreg
  1245  00145A  6E0C               	movwf	pushNibble@value^0,c
  1246  00145C                     
  1247                           ;lcd.c: 26:  soWrite(value);
  1248  00145C  C00C  F007         	movff	pushNibble@value,soWrite@value
  1249  001460  6A08               	clrf	(soWrite@value+1)^0,c
  1250  001462  EC4E  F009         	call	_soWrite	;wreg free
  1251                           
  1252                           ;lcd.c: 27:  digitalWrite(PIN_D5, rs);
  1253  001466  0E00               	movlw	0
  1254  001468  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1255  00146A  0E1D               	movlw	29
  1256  00146C  6E01               	movwf	digitalWrite@pin^0,c
  1257  00146E  C00A  F003         	movff	pushNibble@rs,digitalWrite@value
  1258  001472  C00B  F004         	movff	pushNibble@rs+1,digitalWrite@value+1
  1259  001476  EC46  F004         	call	_digitalWrite	;wreg free
  1260                           
  1261                           ;lcd.c: 28:  pulseEnablePin();
  1262  00147A  EC75  F009         	call	_pulseEnablePin	;wreg free
  1263  00147E  0012               	return		;funcret
  1264  001480                     __end_of_pushNibble:
  1265                           	callstack 0
  1266                           
  1267 ;; *************** function _lcdCommand *****************
  1268 ;; Defined at:
  1269 ;;		line 40 in file "lcd.c"
  1270 ;; Parameters:    Size  Location     Type
  1271 ;;  value           1    wreg     unsigned char 
  1272 ;; Auto vars:     Size  Location     Type
  1273 ;;  value           1   13[COMRAM] unsigned char 
  1274 ;; Return value:  Size  Location     Type
  1275 ;;                  1    wreg      void 
  1276 ;; Registers used:
  1277 ;;		wreg, status,2, status,0, cstack
  1278 ;; Tracked objects:
  1279 ;;		On entry : 0/0
  1280 ;;		On exit  : 0/0
  1281 ;;		Unchanged: 0/0
  1282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1283 ;;      Params:         0       0       0       0       0       0       0
  1284 ;;      Locals:         1       0       0       0       0       0       0
  1285 ;;      Temps:          0       0       0       0       0       0       0
  1286 ;;      Totals:         1       0       0       0       0       0       0
  1287 ;;Total ram usage:        1 bytes
  1288 ;; Hardware stack levels used: 1
  1289 ;; Hardware stack levels required when called: 4
  1290 ;; This function calls:
  1291 ;;		_delayMili
  1292 ;;		_pushByte
  1293 ;; This function is called by:
  1294 ;;		_main
  1295 ;;		_lcdPosition
  1296 ;;		_lcdInit
  1297 ;; This function uses a non-reentrant model
  1298 ;;
  1299                           
  1300                           	psect	text7
  1301  00149E                     __ptext7:
  1302                           	callstack 0
  1303  00149E                     _lcdCommand:
  1304                           	callstack 25
  1305                           
  1306                           ;incstack = 0
  1307                           ;lcdCommand@value stored from wreg
  1308  00149E  6E0E               	movwf	lcdCommand@value^0,c
  1309  0014A0                     
  1310                           ;lcd.c: 41:  pushByte(value, 0);
  1311  0014A0  0E00               	movlw	0
  1312  0014A2  6E0B               	movwf	(pushByte@rs+1)^0,c
  1313  0014A4  0E00               	movlw	0
  1314  0014A6  6E0A               	movwf	pushByte@rs^0,c
  1315  0014A8  500E               	movf	lcdCommand@value^0,w,c
  1316  0014AA  ECF6  F008         	call	_pushByte
  1317                           
  1318                           ;lcd.c: 42:  delayMili(2);
  1319  0014AE  0E00               	movlw	0
  1320  0014B0  6E02               	movwf	(delayMili@a+1)^0,c
  1321  0014B2  0E02               	movlw	2
  1322  0014B4  6E01               	movwf	delayMili@a^0,c
  1323  0014B6  ECEB  F009         	call	_delayMili	;wreg free
  1324  0014BA  0012               	return		;funcret
  1325  0014BC                     __end_of_lcdCommand:
  1326                           	callstack 0
  1327                           
  1328 ;; *************** function _pushByte *****************
  1329 ;; Defined at:
  1330 ;;		line 31 in file "lcd.c"
  1331 ;; Parameters:    Size  Location     Type
  1332 ;;  value           1    wreg     unsigned char 
  1333 ;;  rs              2    9[COMRAM] int 
  1334 ;; Auto vars:     Size  Location     Type
  1335 ;;  value           1   12[COMRAM] unsigned char 
  1336 ;; Return value:  Size  Location     Type
  1337 ;;                  1    wreg      void 
  1338 ;; Registers used:
  1339 ;;		wreg, status,2, status,0, cstack
  1340 ;; Tracked objects:
  1341 ;;		On entry : 0/0
  1342 ;;		On exit  : 0/0
  1343 ;;		Unchanged: 0/0
  1344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1345 ;;      Params:         2       0       0       0       0       0       0
  1346 ;;      Locals:         1       0       0       0       0       0       0
  1347 ;;      Temps:          1       0       0       0       0       0       0
  1348 ;;      Totals:         4       0       0       0       0       0       0
  1349 ;;Total ram usage:        4 bytes
  1350 ;; Hardware stack levels used: 1
  1351 ;; Hardware stack levels required when called: 3
  1352 ;; This function calls:
  1353 ;;		_digitalWrite
  1354 ;;		_pulseEnablePin
  1355 ;;		_soWrite
  1356 ;; This function is called by:
  1357 ;;		_lcdCommand
  1358 ;;		_lcdChar
  1359 ;; This function uses a non-reentrant model
  1360 ;;
  1361                           
  1362                           	psect	text8
  1363  0011EC                     __ptext8:
  1364                           	callstack 0
  1365  0011EC                     _pushByte:
  1366                           	callstack 25
  1367                           
  1368                           ;incstack = 0
  1369                           ;pushByte@value stored from wreg
  1370  0011EC  6E0D               	movwf	pushByte@value^0,c
  1371  0011EE                     
  1372                           ;lcd.c: 32:  soWrite(value >> 4);
  1373  0011EE  C00D  F00C         	movff	pushByte@value,??_pushByte
  1374  0011F2  3A0C               	swapf	??_pushByte^0,f,c
  1375  0011F4  0E0F               	movlw	15
  1376  0011F6  160C               	andwf	??_pushByte^0,f,c
  1377  0011F8  500C               	movf	??_pushByte^0,w,c
  1378  0011FA  6E07               	movwf	soWrite@value^0,c
  1379  0011FC  6A08               	clrf	(soWrite@value+1)^0,c
  1380  0011FE  EC4E  F009         	call	_soWrite	;wreg free
  1381                           
  1382                           ;lcd.c: 33:  digitalWrite(PIN_D5, rs);
  1383  001202  0E00               	movlw	0
  1384  001204  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1385  001206  0E1D               	movlw	29
  1386  001208  6E01               	movwf	digitalWrite@pin^0,c
  1387  00120A  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  1388  00120E  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  1389  001212  EC46  F004         	call	_digitalWrite	;wreg free
  1390                           
  1391                           ;lcd.c: 34:  pulseEnablePin();
  1392  001216  EC75  F009         	call	_pulseEnablePin	;wreg free
  1393                           
  1394                           ;lcd.c: 36:  soWrite(value & 0x0F);
  1395  00121A  C00D  F00C         	movff	pushByte@value,??_pushByte
  1396  00121E  0E0F               	movlw	15
  1397  001220  160C               	andwf	??_pushByte^0,f,c
  1398  001222  500C               	movf	??_pushByte^0,w,c
  1399  001224  6E07               	movwf	soWrite@value^0,c
  1400  001226  6A08               	clrf	(soWrite@value+1)^0,c
  1401  001228  EC4E  F009         	call	_soWrite	;wreg free
  1402                           
  1403                           ;lcd.c: 37:  digitalWrite(PIN_D5, rs);
  1404  00122C  0E00               	movlw	0
  1405  00122E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1406  001230  0E1D               	movlw	29
  1407  001232  6E01               	movwf	digitalWrite@pin^0,c
  1408  001234  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  1409  001238  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  1410  00123C  EC46  F004         	call	_digitalWrite	;wreg free
  1411                           
  1412                           ;lcd.c: 38:  pulseEnablePin();
  1413  001240  EC75  F009         	call	_pulseEnablePin	;wreg free
  1414  001244  0012               	return		;funcret
  1415  001246                     __end_of_pushByte:
  1416                           	callstack 0
  1417                           
  1418 ;; *************** function _pulseEnablePin *****************
  1419 ;; Defined at:
  1420 ;;		line 18 in file "lcd.c"
  1421 ;; Parameters:    Size  Location     Type
  1422 ;;		None
  1423 ;; Auto vars:     Size  Location     Type
  1424 ;;		None
  1425 ;; Return value:  Size  Location     Type
  1426 ;;                  1    wreg      void 
  1427 ;; Registers used:
  1428 ;;		wreg, status,2, status,0, cstack
  1429 ;; Tracked objects:
  1430 ;;		On entry : 0/0
  1431 ;;		On exit  : 0/0
  1432 ;;		Unchanged: 0/0
  1433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1434 ;;      Params:         0       0       0       0       0       0       0
  1435 ;;      Locals:         0       0       0       0       0       0       0
  1436 ;;      Temps:          0       0       0       0       0       0       0
  1437 ;;      Totals:         0       0       0       0       0       0       0
  1438 ;;Total ram usage:        0 bytes
  1439 ;; Hardware stack levels used: 1
  1440 ;; Hardware stack levels required when called: 1
  1441 ;; This function calls:
  1442 ;;		_delayMicro
  1443 ;;		_digitalWrite
  1444 ;; This function is called by:
  1445 ;;		_pushNibble
  1446 ;;		_pushByte
  1447 ;; This function uses a non-reentrant model
  1448 ;;
  1449                           
  1450                           	psect	text9
  1451  0012EA                     __ptext9:
  1452                           	callstack 0
  1453  0012EA                     _pulseEnablePin:
  1454                           	callstack 26
  1455  0012EA                     
  1456                           ;lcd.c: 19:  digitalWrite(PIN_D4, 1);
  1457  0012EA  0E00               	movlw	0
  1458  0012EC  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1459  0012EE  0E1C               	movlw	28
  1460  0012F0  6E01               	movwf	digitalWrite@pin^0,c
  1461  0012F2  0E00               	movlw	0
  1462  0012F4  6E04               	movwf	(digitalWrite@value+1)^0,c
  1463  0012F6  0E01               	movlw	1
  1464  0012F8  6E03               	movwf	digitalWrite@value^0,c
  1465  0012FA  EC46  F004         	call	_digitalWrite	;wreg free
  1466  0012FE                     
  1467                           ;lcd.c: 20:  delayMicro(5);
  1468  0012FE  0E00               	movlw	0
  1469  001300  6E02               	movwf	(delayMicro@a+1)^0,c
  1470  001302  0E05               	movlw	5
  1471  001304  6E01               	movwf	delayMicro@a^0,c
  1472  001306  EC6E  F00A         	call	_delayMicro	;wreg free
  1473  00130A                     
  1474                           ;lcd.c: 21:  digitalWrite(PIN_D4, 0);
  1475  00130A  0E00               	movlw	0
  1476  00130C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1477  00130E  0E1C               	movlw	28
  1478  001310  6E01               	movwf	digitalWrite@pin^0,c
  1479  001312  0E00               	movlw	0
  1480  001314  6E04               	movwf	(digitalWrite@value+1)^0,c
  1481  001316  0E00               	movlw	0
  1482  001318  6E03               	movwf	digitalWrite@value^0,c
  1483  00131A  EC46  F004         	call	_digitalWrite	;wreg free
  1484                           
  1485                           ;lcd.c: 22:  delayMicro(5);
  1486  00131E  0E00               	movlw	0
  1487  001320  6E02               	movwf	(delayMicro@a+1)^0,c
  1488  001322  0E05               	movlw	5
  1489  001324  6E01               	movwf	delayMicro@a^0,c
  1490  001326  EC6E  F00A         	call	_delayMicro	;wreg free
  1491  00132A  0012               	return		;funcret
  1492  00132C                     __end_of_pulseEnablePin:
  1493                           	callstack 0
  1494                           
  1495 ;; *************** function _delayMicro *****************
  1496 ;; Defined at:
  1497 ;;		line 5 in file "lcd.c"
  1498 ;; Parameters:    Size  Location     Type
  1499 ;;  a               2    0[COMRAM] int 
  1500 ;; Auto vars:     Size  Location     Type
  1501 ;;  i               2    0        volatile int 
  1502 ;; Return value:  Size  Location     Type
  1503 ;;                  1    wreg      void 
  1504 ;; Registers used:
  1505 ;;		None
  1506 ;; Tracked objects:
  1507 ;;		On entry : 0/0
  1508 ;;		On exit  : 0/0
  1509 ;;		Unchanged: 0/0
  1510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1511 ;;      Params:         2       0       0       0       0       0       0
  1512 ;;      Locals:         0       0       0       0       0       0       0
  1513 ;;      Temps:          0       0       0       0       0       0       0
  1514 ;;      Totals:         2       0       0       0       0       0       0
  1515 ;;Total ram usage:        2 bytes
  1516 ;; Hardware stack levels used: 1
  1517 ;; This function calls:
  1518 ;;		Nothing
  1519 ;; This function is called by:
  1520 ;;		_pulseEnablePin
  1521 ;;		_lcdChar
  1522 ;;		_lcdInit
  1523 ;; This function uses a non-reentrant model
  1524 ;;
  1525                           
  1526                           	psect	text10
  1527  0014DC                     __ptext10:
  1528                           	callstack 0
  1529  0014DC                     _delayMicro:
  1530                           	callstack 26
  1531  0014DC  0012               	return		;funcret
  1532  0014DE                     __end_of_delayMicro:
  1533                           	callstack 0
  1534                           
  1535 ;; *************** function _delayMili *****************
  1536 ;; Defined at:
  1537 ;;		line 10 in file "lcd.c"
  1538 ;; Parameters:    Size  Location     Type
  1539 ;;  a               2    0[COMRAM] int 
  1540 ;; Auto vars:     Size  Location     Type
  1541 ;;  i               2    3[COMRAM] volatile int 
  1542 ;; Return value:  Size  Location     Type
  1543 ;;                  1    wreg      void 
  1544 ;; Registers used:
  1545 ;;		wreg, status,2, status,0
  1546 ;; Tracked objects:
  1547 ;;		On entry : 0/0
  1548 ;;		On exit  : 0/0
  1549 ;;		Unchanged: 0/0
  1550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1551 ;;      Params:         2       0       0       0       0       0       0
  1552 ;;      Locals:         2       0       0       0       0       0       0
  1553 ;;      Temps:          1       0       0       0       0       0       0
  1554 ;;      Totals:         5       0       0       0       0       0       0
  1555 ;;Total ram usage:        5 bytes
  1556 ;; Hardware stack levels used: 1
  1557 ;; This function calls:
  1558 ;;		Nothing
  1559 ;; This function is called by:
  1560 ;;		_lcdCommand
  1561 ;;		_lcdInit
  1562 ;; This function uses a non-reentrant model
  1563 ;;
  1564                           
  1565                           	psect	text11
  1566  0013D6                     __ptext11:
  1567                           	callstack 0
  1568  0013D6                     _delayMili:
  1569                           	callstack 28
  1570  0013D6                     
  1571                           ;lcd.c: 11:  volatile int i;;lcd.c: 12:  for (i = 0; i < a; i++) {
  1572  0013D6  0E00               	movlw	0
  1573  0013D8  6E05               	movwf	(delayMili@i+1)^0,c	;volatile
  1574  0013DA  0E00               	movlw	0
  1575  0013DC  6E04               	movwf	delayMili@i^0,c	;volatile
  1576  0013DE  EFF3  F009         	goto	l1630
  1577  0013E2                     l1628:
  1578                           
  1579                           ;lcd.c: 15:  }
  1580  0013E2  4A04               	infsnz	delayMili@i^0,f,c	;volatile
  1581  0013E4  2A05               	incf	(delayMili@i+1)^0,f,c	;volatile
  1582  0013E6                     l1630:
  1583  0013E6  5001               	movf	delayMili@a^0,w,c
  1584  0013E8  5C04               	subwf	delayMili@i^0,w,c	;volatile
  1585  0013EA  5005               	movf	(delayMili@i+1)^0,w,c	;volatile
  1586  0013EC  0A80               	xorlw	128
  1587  0013EE  6E03               	movwf	??_delayMili^0,c
  1588  0013F0  5002               	movf	(delayMili@a+1)^0,w,c
  1589  0013F2  0A80               	xorlw	128
  1590  0013F4  5803               	subwfb	??_delayMili^0,w,c
  1591  0013F6  A0D8               	btfss	status,0,c
  1592  0013F8  EF00  F00A         	goto	u1341
  1593  0013FC  EF02  F00A         	goto	u1340
  1594  001400                     u1341:
  1595  001400  EFF1  F009         	goto	l1628
  1596  001404                     u1340:
  1597  001404  0012               	return		;funcret
  1598  001406                     __end_of_delayMili:
  1599                           	callstack 0
  1600                           
  1601 ;; *************** function _kpRead *****************
  1602 ;; Defined at:
  1603 ;;		line 14 in file "keypad.c"
  1604 ;; Parameters:    Size  Location     Type
  1605 ;;		None
  1606 ;; Auto vars:     Size  Location     Type
  1607 ;;		None
  1608 ;; Return value:  Size  Location     Type
  1609 ;;                  2    0[COMRAM] unsigned int 
  1610 ;; Registers used:
  1611 ;;		None
  1612 ;; Tracked objects:
  1613 ;;		On entry : 0/0
  1614 ;;		On exit  : 0/0
  1615 ;;		Unchanged: 0/0
  1616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1617 ;;      Params:         2       0       0       0       0       0       0
  1618 ;;      Locals:         0       0       0       0       0       0       0
  1619 ;;      Temps:          0       0       0       0       0       0       0
  1620 ;;      Totals:         2       0       0       0       0       0       0
  1621 ;;Total ram usage:        2 bytes
  1622 ;; Hardware stack levels used: 1
  1623 ;; This function calls:
  1624 ;;		Nothing
  1625 ;; This function is called by:
  1626 ;;		_main
  1627 ;; This function uses a non-reentrant model
  1628 ;;
  1629                           
  1630                           	psect	text12
  1631  0014D2                     __ptext12:
  1632                           	callstack 0
  1633  0014D2                     _kpRead:
  1634                           	callstack 30
  1635  0014D2                     
  1636                           ;keypad.c: 15:     return keys;
  1637  0014D2  C025  F001         	movff	_keys,?_kpRead
  1638  0014D6  C026  F002         	movff	_keys+1,?_kpRead+1
  1639  0014DA  0012               	return		;funcret
  1640  0014DC                     __end_of_kpRead:
  1641                           	callstack 0
  1642                           
  1643 ;; *************** function _kpInit *****************
  1644 ;; Defined at:
  1645 ;;		line 54 in file "keypad.c"
  1646 ;; Parameters:    Size  Location     Type
  1647 ;;		None
  1648 ;; Auto vars:     Size  Location     Type
  1649 ;;		None
  1650 ;; Return value:  Size  Location     Type
  1651 ;;                  1    wreg      void 
  1652 ;; Registers used:
  1653 ;;		wreg, status,2, status,0, cstack
  1654 ;; Tracked objects:
  1655 ;;		On entry : 0/0
  1656 ;;		On exit  : 0/0
  1657 ;;		Unchanged: 0/0
  1658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1659 ;;      Params:         0       0       0       0       0       0       0
  1660 ;;      Locals:         0       0       0       0       0       0       0
  1661 ;;      Temps:          0       0       0       0       0       0       0
  1662 ;;      Totals:         0       0       0       0       0       0       0
  1663 ;;Total ram usage:        0 bytes
  1664 ;; Hardware stack levels used: 1
  1665 ;; Hardware stack levels required when called: 2
  1666 ;; This function calls:
  1667 ;;		_pinMode
  1668 ;;		_soInit
  1669 ;; This function is called by:
  1670 ;;		_main
  1671 ;; This function uses a non-reentrant model
  1672 ;;
  1673                           
  1674                           	psect	text13
  1675  0013A4                     __ptext13:
  1676                           	callstack 0
  1677  0013A4                     _kpInit:
  1678                           	callstack 28
  1679  0013A4                     
  1680                           ;keypad.c: 55:   soInit();
  1681  0013A4  EC96  F009         	call	_soInit	;wreg free
  1682                           
  1683                           ;keypad.c: 56:   pinMode(PIN_B2, 1);
  1684  0013A8  0E00               	movlw	0
  1685  0013AA  6E02               	movwf	(pinMode@pin+1)^0,c
  1686  0013AC  0E0A               	movlw	10
  1687  0013AE  6E01               	movwf	pinMode@pin^0,c
  1688  0013B0  0E00               	movlw	0
  1689  0013B2  6E04               	movwf	(pinMode@type+1)^0,c
  1690  0013B4  0E01               	movlw	1
  1691  0013B6  6E03               	movwf	pinMode@type^0,c
  1692  0013B8  EC1F  F003         	call	_pinMode	;wreg free
  1693                           
  1694                           ;keypad.c: 57:   pinMode(PIN_B1, 1);
  1695  0013BC  0E00               	movlw	0
  1696  0013BE  6E02               	movwf	(pinMode@pin+1)^0,c
  1697  0013C0  0E09               	movlw	9
  1698  0013C2  6E01               	movwf	pinMode@pin^0,c
  1699  0013C4  0E00               	movlw	0
  1700  0013C6  6E04               	movwf	(pinMode@type+1)^0,c
  1701  0013C8  0E01               	movlw	1
  1702  0013CA  6E03               	movwf	pinMode@type^0,c
  1703  0013CC  EC1F  F003         	call	_pinMode	;wreg free
  1704  0013D0                     
  1705                           ;keypad.c: 58:   ADCON1 = 0b00001100;
  1706  0013D0  0E0C               	movlw	12
  1707  0013D2  6EC1               	movwf	193,c	;volatile
  1708  0013D4  0012               	return		;funcret
  1709  0013D6                     __end_of_kpInit:
  1710                           	callstack 0
  1711                           
  1712 ;; *************** function _soInit *****************
  1713 ;; Defined at:
  1714 ;;		line 3 in file "so.c"
  1715 ;; Parameters:    Size  Location     Type
  1716 ;;		None
  1717 ;; Auto vars:     Size  Location     Type
  1718 ;;		None
  1719 ;; Return value:  Size  Location     Type
  1720 ;;                  1    wreg      void 
  1721 ;; Registers used:
  1722 ;;		wreg, status,2, status,0, cstack
  1723 ;; Tracked objects:
  1724 ;;		On entry : 0/0
  1725 ;;		On exit  : 0/0
  1726 ;;		Unchanged: 0/0
  1727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1728 ;;      Params:         0       0       0       0       0       0       0
  1729 ;;      Locals:         0       0       0       0       0       0       0
  1730 ;;      Temps:          0       0       0       0       0       0       0
  1731 ;;      Totals:         0       0       0       0       0       0       0
  1732 ;;Total ram usage:        0 bytes
  1733 ;; Hardware stack levels used: 1
  1734 ;; Hardware stack levels required when called: 1
  1735 ;; This function calls:
  1736 ;;		_pinMode
  1737 ;; This function is called by:
  1738 ;;		_kpInit
  1739 ;;		_lcdInit
  1740 ;;		_ssdInit
  1741 ;; This function uses a non-reentrant model
  1742 ;;
  1743                           
  1744                           	psect	text14
  1745  00132C                     __ptext14:
  1746                           	callstack 0
  1747  00132C                     _soInit:
  1748                           	callstack 28
  1749  00132C                     
  1750                           ;so.c: 4:  pinMode(PIN_D7, 0);
  1751  00132C  0E00               	movlw	0
  1752  00132E  6E02               	movwf	(pinMode@pin+1)^0,c
  1753  001330  0E1F               	movlw	31
  1754  001332  6E01               	movwf	pinMode@pin^0,c
  1755  001334  0E00               	movlw	0
  1756  001336  6E04               	movwf	(pinMode@type+1)^0,c
  1757  001338  0E00               	movlw	0
  1758  00133A  6E03               	movwf	pinMode@type^0,c
  1759  00133C  EC1F  F003         	call	_pinMode	;wreg free
  1760                           
  1761                           ;so.c: 5:  pinMode(PIN_B0, 0);
  1762  001340  0E00               	movlw	0
  1763  001342  6E02               	movwf	(pinMode@pin+1)^0,c
  1764  001344  0E08               	movlw	8
  1765  001346  6E01               	movwf	pinMode@pin^0,c
  1766  001348  0E00               	movlw	0
  1767  00134A  6E04               	movwf	(pinMode@type+1)^0,c
  1768  00134C  0E00               	movlw	0
  1769  00134E  6E03               	movwf	pinMode@type^0,c
  1770  001350  EC1F  F003         	call	_pinMode	;wreg free
  1771                           
  1772                           ;so.c: 6:  pinMode(PIN_D6, 0);
  1773  001354  0E00               	movlw	0
  1774  001356  6E02               	movwf	(pinMode@pin+1)^0,c
  1775  001358  0E1E               	movlw	30
  1776  00135A  6E01               	movwf	pinMode@pin^0,c
  1777  00135C  0E00               	movlw	0
  1778  00135E  6E04               	movwf	(pinMode@type+1)^0,c
  1779  001360  0E00               	movlw	0
  1780  001362  6E03               	movwf	pinMode@type^0,c
  1781  001364  EC1F  F003         	call	_pinMode	;wreg free
  1782  001368  0012               	return		;funcret
  1783  00136A                     __end_of_soInit:
  1784                           	callstack 0
  1785                           
  1786 ;; *************** function _pinMode *****************
  1787 ;; Defined at:
  1788 ;;		line 54 in file "io.c"
  1789 ;; Parameters:    Size  Location     Type
  1790 ;;  pin             2    0[COMRAM] int 
  1791 ;;  type            2    2[COMRAM] int 
  1792 ;; Auto vars:     Size  Location     Type
  1793 ;;		None
  1794 ;; Return value:  Size  Location     Type
  1795 ;;                  1    wreg      void 
  1796 ;; Registers used:
  1797 ;;		wreg, status,2, status,0
  1798 ;; Tracked objects:
  1799 ;;		On entry : 0/0
  1800 ;;		On exit  : 0/0
  1801 ;;		Unchanged: 0/0
  1802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1803 ;;      Params:         4       0       0       0       0       0       0
  1804 ;;      Locals:         0       0       0       0       0       0       0
  1805 ;;      Temps:          2       0       0       0       0       0       0
  1806 ;;      Totals:         6       0       0       0       0       0       0
  1807 ;;Total ram usage:        6 bytes
  1808 ;; Hardware stack levels used: 1
  1809 ;; This function calls:
  1810 ;;		Nothing
  1811 ;; This function is called by:
  1812 ;;		_kpInit
  1813 ;;		_lcdInit
  1814 ;;		_soInit
  1815 ;;		_adcInit
  1816 ;;		_ssdInit
  1817 ;; This function uses a non-reentrant model
  1818 ;;
  1819                           
  1820                           	psect	text15
  1821  00063E                     __ptext15:
  1822                           	callstack 0
  1823  00063E                     _pinMode:
  1824                           	callstack 28
  1825  00063E                     
  1826                           ;io.c: 56:     if(pin <8){
  1827  00063E  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  1828  000640  EF2D  F003         	goto	u1140
  1829  000644  5002               	movf	(pinMode@pin+1)^0,w,c
  1830  000646  E107               	bnz	u1141
  1831  000648  0E08               	movlw	8
  1832  00064A  5C01               	subwf	pinMode@pin^0,w,c
  1833  00064C  B0D8               	btfsc	status,0,c
  1834  00064E  EF2B  F003         	goto	u1141
  1835  000652  EF2D  F003         	goto	u1140
  1836  000656                     u1141:
  1837  000656  EF57  F003         	goto	l1594
  1838  00065A                     u1140:
  1839  00065A                     
  1840                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  1841  00065A  5003               	movf	pinMode@type^0,w,c
  1842  00065C  1004               	iorwf	(pinMode@type+1)^0,w,c
  1843  00065E  B4D8               	btfsc	status,2,c
  1844  000660  EF34  F003         	goto	u1151
  1845  000664  EF36  F003         	goto	u1150
  1846  000668                     u1151:
  1847  000668  EF46  F003         	goto	l1592
  1848  00066C                     u1150:
  1849  00066C  C001  F005         	movff	pinMode@pin,??_pinMode
  1850  000670  0E01               	movlw	1
  1851  000672  6E06               	movwf	(??_pinMode+1)^0,c
  1852  000674  2A05               	incf	??_pinMode^0,f,c
  1853  000676  EF3F  F003         	goto	u1164
  1854  00067A                     u1165:
  1855  00067A  90D8               	bcf	status,0,c
  1856  00067C  3606               	rlcf	(??_pinMode+1)^0,f,c
  1857  00067E                     u1164:
  1858  00067E  2E05               	decfsz	??_pinMode^0,f,c
  1859  000680  EF3D  F003         	goto	u1165
  1860  000684  5006               	movf	(??_pinMode+1)^0,w,c
  1861  000686  1292               	iorwf	146,f,c	;volatile
  1862  000688  EF45  F004         	goto	l213
  1863  00068C                     l1592:
  1864  00068C  C001  F005         	movff	pinMode@pin,??_pinMode
  1865  000690  0E01               	movlw	1
  1866  000692  6E06               	movwf	(??_pinMode+1)^0,c
  1867  000694  2A05               	incf	??_pinMode^0,f,c
  1868  000696  EF4F  F003         	goto	u1174
  1869  00069A                     u1175:
  1870  00069A  90D8               	bcf	status,0,c
  1871  00069C  3606               	rlcf	(??_pinMode+1)^0,f,c
  1872  00069E                     u1174:
  1873  00069E  2E05               	decfsz	??_pinMode^0,f,c
  1874  0006A0  EF4D  F003         	goto	u1175
  1875  0006A4  5006               	movf	(??_pinMode+1)^0,w,c
  1876  0006A6  0AFF               	xorlw	255
  1877  0006A8  1692               	andwf	146,f,c	;volatile
  1878  0006AA  EF45  F004         	goto	l213
  1879  0006AE                     l1594:
  1880  0006AE  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  1881  0006B0  EF65  F003         	goto	u1180
  1882  0006B4  5002               	movf	(pinMode@pin+1)^0,w,c
  1883  0006B6  E107               	bnz	u1181
  1884  0006B8  0E10               	movlw	16
  1885  0006BA  5C01               	subwf	pinMode@pin^0,w,c
  1886  0006BC  B0D8               	btfsc	status,0,c
  1887  0006BE  EF63  F003         	goto	u1181
  1888  0006C2  EF65  F003         	goto	u1180
  1889  0006C6                     u1181:
  1890  0006C6  EF93  F003         	goto	l1602
  1891  0006CA                     u1180:
  1892  0006CA                     
  1893                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  1894  0006CA  5003               	movf	pinMode@type^0,w,c
  1895  0006CC  1004               	iorwf	(pinMode@type+1)^0,w,c
  1896  0006CE  B4D8               	btfsc	status,2,c
  1897  0006D0  EF6C  F003         	goto	u1191
  1898  0006D4  EF6E  F003         	goto	u1190
  1899  0006D8                     u1191:
  1900  0006D8  EF80  F003         	goto	l1600
  1901  0006DC                     u1190:
  1902  0006DC  C001  F005         	movff	pinMode@pin,??_pinMode
  1903  0006E0  0EF8               	movlw	-8
  1904  0006E2  2605               	addwf	??_pinMode^0,f,c
  1905  0006E4  0E01               	movlw	1
  1906  0006E6  6E06               	movwf	(??_pinMode+1)^0,c
  1907  0006E8  2A05               	incf	??_pinMode^0,f,c
  1908  0006EA  EF79  F003         	goto	u1204
  1909  0006EE                     u1205:
  1910  0006EE  90D8               	bcf	status,0,c
  1911  0006F0  3606               	rlcf	(??_pinMode+1)^0,f,c
  1912  0006F2                     u1204:
  1913  0006F2  2E05               	decfsz	??_pinMode^0,f,c
  1914  0006F4  EF77  F003         	goto	u1205
  1915  0006F8  5006               	movf	(??_pinMode+1)^0,w,c
  1916  0006FA  1293               	iorwf	147,f,c	;volatile
  1917  0006FC  EF45  F004         	goto	l213
  1918  000700                     l1600:
  1919  000700  C001  F005         	movff	pinMode@pin,??_pinMode
  1920  000704  0EF8               	movlw	-8
  1921  000706  2605               	addwf	??_pinMode^0,f,c
  1922  000708  0E01               	movlw	1
  1923  00070A  6E06               	movwf	(??_pinMode+1)^0,c
  1924  00070C  2A05               	incf	??_pinMode^0,f,c
  1925  00070E  EF8B  F003         	goto	u1214
  1926  000712                     u1215:
  1927  000712  90D8               	bcf	status,0,c
  1928  000714  3606               	rlcf	(??_pinMode+1)^0,f,c
  1929  000716                     u1214:
  1930  000716  2E05               	decfsz	??_pinMode^0,f,c
  1931  000718  EF89  F003         	goto	u1215
  1932  00071C  5006               	movf	(??_pinMode+1)^0,w,c
  1933  00071E  0AFF               	xorlw	255
  1934  000720  1693               	andwf	147,f,c	;volatile
  1935  000722  EF45  F004         	goto	l213
  1936  000726                     l1602:
  1937  000726  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  1938  000728  EFA1  F003         	goto	u1220
  1939  00072C  5002               	movf	(pinMode@pin+1)^0,w,c
  1940  00072E  E107               	bnz	u1221
  1941  000730  0E18               	movlw	24
  1942  000732  5C01               	subwf	pinMode@pin^0,w,c
  1943  000734  B0D8               	btfsc	status,0,c
  1944  000736  EF9F  F003         	goto	u1221
  1945  00073A  EFA1  F003         	goto	u1220
  1946  00073E                     u1221:
  1947  00073E  EFCF  F003         	goto	l1610
  1948  000742                     u1220:
  1949  000742                     
  1950                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  1951  000742  5003               	movf	pinMode@type^0,w,c
  1952  000744  1004               	iorwf	(pinMode@type+1)^0,w,c
  1953  000746  B4D8               	btfsc	status,2,c
  1954  000748  EFA8  F003         	goto	u1231
  1955  00074C  EFAA  F003         	goto	u1230
  1956  000750                     u1231:
  1957  000750  EFBC  F003         	goto	l1608
  1958  000754                     u1230:
  1959  000754  C001  F005         	movff	pinMode@pin,??_pinMode
  1960  000758  0EF0               	movlw	-16
  1961  00075A  2605               	addwf	??_pinMode^0,f,c
  1962  00075C  0E01               	movlw	1
  1963  00075E  6E06               	movwf	(??_pinMode+1)^0,c
  1964  000760  2A05               	incf	??_pinMode^0,f,c
  1965  000762  EFB5  F003         	goto	u1244
  1966  000766                     u1245:
  1967  000766  90D8               	bcf	status,0,c
  1968  000768  3606               	rlcf	(??_pinMode+1)^0,f,c
  1969  00076A                     u1244:
  1970  00076A  2E05               	decfsz	??_pinMode^0,f,c
  1971  00076C  EFB3  F003         	goto	u1245
  1972  000770  5006               	movf	(??_pinMode+1)^0,w,c
  1973  000772  1294               	iorwf	148,f,c	;volatile
  1974  000774  EF45  F004         	goto	l213
  1975  000778                     l1608:
  1976  000778  C001  F005         	movff	pinMode@pin,??_pinMode
  1977  00077C  0EF0               	movlw	-16
  1978  00077E  2605               	addwf	??_pinMode^0,f,c
  1979  000780  0E01               	movlw	1
  1980  000782  6E06               	movwf	(??_pinMode+1)^0,c
  1981  000784  2A05               	incf	??_pinMode^0,f,c
  1982  000786  EFC7  F003         	goto	u1254
  1983  00078A                     u1255:
  1984  00078A  90D8               	bcf	status,0,c
  1985  00078C  3606               	rlcf	(??_pinMode+1)^0,f,c
  1986  00078E                     u1254:
  1987  00078E  2E05               	decfsz	??_pinMode^0,f,c
  1988  000790  EFC5  F003         	goto	u1255
  1989  000794  5006               	movf	(??_pinMode+1)^0,w,c
  1990  000796  0AFF               	xorlw	255
  1991  000798  1694               	andwf	148,f,c	;volatile
  1992  00079A  EF45  F004         	goto	l213
  1993  00079E                     l1610:
  1994  00079E  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  1995  0007A0  EFDD  F003         	goto	u1260
  1996  0007A4  5002               	movf	(pinMode@pin+1)^0,w,c
  1997  0007A6  E107               	bnz	u1261
  1998  0007A8  0E20               	movlw	32
  1999  0007AA  5C01               	subwf	pinMode@pin^0,w,c
  2000  0007AC  B0D8               	btfsc	status,0,c
  2001  0007AE  EFDB  F003         	goto	u1261
  2002  0007B2  EFDD  F003         	goto	u1260
  2003  0007B6                     u1261:
  2004  0007B6  EF0B  F004         	goto	l1618
  2005  0007BA                     u1260:
  2006  0007BA                     
  2007                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  2008  0007BA  5003               	movf	pinMode@type^0,w,c
  2009  0007BC  1004               	iorwf	(pinMode@type+1)^0,w,c
  2010  0007BE  B4D8               	btfsc	status,2,c
  2011  0007C0  EFE4  F003         	goto	u1271
  2012  0007C4  EFE6  F003         	goto	u1270
  2013  0007C8                     u1271:
  2014  0007C8  EFF8  F003         	goto	l1616
  2015  0007CC                     u1270:
  2016  0007CC  C001  F005         	movff	pinMode@pin,??_pinMode
  2017  0007D0  0EE8               	movlw	-24
  2018  0007D2  2605               	addwf	??_pinMode^0,f,c
  2019  0007D4  0E01               	movlw	1
  2020  0007D6  6E06               	movwf	(??_pinMode+1)^0,c
  2021  0007D8  2A05               	incf	??_pinMode^0,f,c
  2022  0007DA  EFF1  F003         	goto	u1284
  2023  0007DE                     u1285:
  2024  0007DE  90D8               	bcf	status,0,c
  2025  0007E0  3606               	rlcf	(??_pinMode+1)^0,f,c
  2026  0007E2                     u1284:
  2027  0007E2  2E05               	decfsz	??_pinMode^0,f,c
  2028  0007E4  EFEF  F003         	goto	u1285
  2029  0007E8  5006               	movf	(??_pinMode+1)^0,w,c
  2030  0007EA  1295               	iorwf	149,f,c	;volatile
  2031  0007EC  EF45  F004         	goto	l213
  2032  0007F0                     l1616:
  2033  0007F0  C001  F005         	movff	pinMode@pin,??_pinMode
  2034  0007F4  0EE8               	movlw	-24
  2035  0007F6  2605               	addwf	??_pinMode^0,f,c
  2036  0007F8  0E01               	movlw	1
  2037  0007FA  6E06               	movwf	(??_pinMode+1)^0,c
  2038  0007FC  2A05               	incf	??_pinMode^0,f,c
  2039  0007FE  EF03  F004         	goto	u1294
  2040  000802                     u1295:
  2041  000802  90D8               	bcf	status,0,c
  2042  000804  3606               	rlcf	(??_pinMode+1)^0,f,c
  2043  000806                     u1294:
  2044  000806  2E05               	decfsz	??_pinMode^0,f,c
  2045  000808  EF01  F004         	goto	u1295
  2046  00080C  5006               	movf	(??_pinMode+1)^0,w,c
  2047  00080E  0AFF               	xorlw	255
  2048  000810  1695               	andwf	149,f,c	;volatile
  2049  000812  EF45  F004         	goto	l213
  2050  000816                     l1618:
  2051  000816  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  2052  000818  EF19  F004         	goto	u1300
  2053  00081C  5002               	movf	(pinMode@pin+1)^0,w,c
  2054  00081E  E107               	bnz	u1301
  2055  000820  0E28               	movlw	40
  2056  000822  5C01               	subwf	pinMode@pin^0,w,c
  2057  000824  B0D8               	btfsc	status,0,c
  2058  000826  EF17  F004         	goto	u1301
  2059  00082A  EF19  F004         	goto	u1300
  2060  00082E                     u1301:
  2061  00082E  EF45  F004         	goto	l213
  2062  000832                     u1300:
  2063  000832                     
  2064                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  2065  000832  5003               	movf	pinMode@type^0,w,c
  2066  000834  1004               	iorwf	(pinMode@type+1)^0,w,c
  2067  000836  B4D8               	btfsc	status,2,c
  2068  000838  EF20  F004         	goto	u1311
  2069  00083C  EF22  F004         	goto	u1310
  2070  000840                     u1311:
  2071  000840  EF34  F004         	goto	l1624
  2072  000844                     u1310:
  2073  000844  C001  F005         	movff	pinMode@pin,??_pinMode
  2074  000848  0EE0               	movlw	-32
  2075  00084A  2605               	addwf	??_pinMode^0,f,c
  2076  00084C  0E01               	movlw	1
  2077  00084E  6E06               	movwf	(??_pinMode+1)^0,c
  2078  000850  2A05               	incf	??_pinMode^0,f,c
  2079  000852  EF2D  F004         	goto	u1324
  2080  000856                     u1325:
  2081  000856  90D8               	bcf	status,0,c
  2082  000858  3606               	rlcf	(??_pinMode+1)^0,f,c
  2083  00085A                     u1324:
  2084  00085A  2E05               	decfsz	??_pinMode^0,f,c
  2085  00085C  EF2B  F004         	goto	u1325
  2086  000860  5006               	movf	(??_pinMode+1)^0,w,c
  2087  000862  1296               	iorwf	150,f,c	;volatile
  2088  000864  EF45  F004         	goto	l213
  2089  000868                     l1624:
  2090  000868  C001  F005         	movff	pinMode@pin,??_pinMode
  2091  00086C  0EE0               	movlw	-32
  2092  00086E  2605               	addwf	??_pinMode^0,f,c
  2093  000870  0E01               	movlw	1
  2094  000872  6E06               	movwf	(??_pinMode+1)^0,c
  2095  000874  2A05               	incf	??_pinMode^0,f,c
  2096  000876  EF3F  F004         	goto	u1334
  2097  00087A                     u1335:
  2098  00087A  90D8               	bcf	status,0,c
  2099  00087C  3606               	rlcf	(??_pinMode+1)^0,f,c
  2100  00087E                     u1334:
  2101  00087E  2E05               	decfsz	??_pinMode^0,f,c
  2102  000880  EF3D  F004         	goto	u1335
  2103  000884  5006               	movf	(??_pinMode+1)^0,w,c
  2104  000886  0AFF               	xorlw	255
  2105  000888  1696               	andwf	150,f,c	;volatile
  2106  00088A                     l213:
  2107  00088A  0012               	return		;funcret
  2108  00088C                     __end_of_pinMode:
  2109                           	callstack 0
  2110                           
  2111 ;; *************** function _kpDebounce *****************
  2112 ;; Defined at:
  2113 ;;		line 27 in file "keypad.c"
  2114 ;; Parameters:    Size  Location     Type
  2115 ;;		None
  2116 ;; Auto vars:     Size  Location     Type
  2117 ;;  i               2   12[COMRAM] int 
  2118 ;; Return value:  Size  Location     Type
  2119 ;;                  1    wreg      void 
  2120 ;; Registers used:
  2121 ;;		wreg, status,2, status,0, cstack
  2122 ;; Tracked objects:
  2123 ;;		On entry : 0/0
  2124 ;;		On exit  : 0/0
  2125 ;;		Unchanged: 0/0
  2126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2127 ;;      Params:         0       0       0       0       0       0       0
  2128 ;;      Locals:         2       0       0       0       0       0       0
  2129 ;;      Temps:          3       0       0       0       0       0       0
  2130 ;;      Totals:         5       0       0       0       0       0       0
  2131 ;;Total ram usage:        5 bytes
  2132 ;; Hardware stack levels used: 1
  2133 ;; Hardware stack levels required when called: 3
  2134 ;; This function calls:
  2135 ;;		_digitalRead
  2136 ;;		_soWrite
  2137 ;; This function is called by:
  2138 ;;		_main
  2139 ;; This function uses a non-reentrant model
  2140 ;;
  2141                           
  2142                           	psect	text16
  2143  000E72                     __ptext16:
  2144                           	callstack 0
  2145  000E72                     _kpDebounce:
  2146                           	callstack 27
  2147  000E72                     
  2148                           ;keypad.c: 28:     int i;;keypad.c: 29:     static unsigned char tempo;;keypad.c: 30:   
      +                            static unsigned int newRead;;keypad.c: 31:     static unsigned int oldRead;;keypad.c: 
      +                          32:     newRead = 0;
  2149  000E72  0E00               	movlw	0
  2150  000E74  6E24               	movwf	(kpDebounce@newRead+1)^0,c
  2151  000E76  0E00               	movlw	0
  2152  000E78  6E23               	movwf	kpDebounce@newRead^0,c
  2153                           
  2154                           ;keypad.c: 33:     for(i = 0; i<5; i++){
  2155  000E7A  0E00               	movlw	0
  2156  000E7C  6E0E               	movwf	(kpDebounce@i+1)^0,c
  2157  000E7E  0E00               	movlw	0
  2158  000E80  6E0D               	movwf	kpDebounce@i^0,c
  2159  000E82                     l1746:
  2160  000E82  BE0E               	btfsc	(kpDebounce@i+1)^0,7,c
  2161  000E84  EF4D  F007         	goto	u1511
  2162  000E88  500E               	movf	(kpDebounce@i+1)^0,w,c
  2163  000E8A  E109               	bnz	u1510
  2164  000E8C  0E05               	movlw	5
  2165  000E8E  5C0D               	subwf	kpDebounce@i^0,w,c
  2166  000E90  A0D8               	btfss	status,0,c
  2167  000E92  EF4D  F007         	goto	u1511
  2168  000E96  EF4F  F007         	goto	u1510
  2169  000E9A                     u1511:
  2170  000E9A  EF51  F007         	goto	l1750
  2171  000E9E                     u1510:
  2172  000E9E  EFB2  F007         	goto	l1762
  2173  000EA2                     l1750:
  2174                           
  2175                           ;keypad.c: 35:       soWrite(1<<(i+3));
  2176  000EA2  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  2177  000EA6  0E03               	movlw	3
  2178  000EA8  260A               	addwf	??_kpDebounce^0,f,c
  2179  000EAA  0E01               	movlw	1
  2180  000EAC  6E0B               	movwf	(??_kpDebounce+1)^0,c
  2181  000EAE  0E00               	movlw	0
  2182  000EB0  6E0C               	movwf	(??_kpDebounce+2)^0,c
  2183  000EB2  2A0A               	incf	??_kpDebounce^0,f,c
  2184  000EB4  EF5F  F007         	goto	u1524
  2185  000EB8                     u1525:
  2186  000EB8  90D8               	bcf	status,0,c
  2187  000EBA  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  2188  000EBC  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  2189  000EBE                     u1524:
  2190  000EBE  2E0A               	decfsz	??_kpDebounce^0,f,c
  2191  000EC0  EF5C  F007         	goto	u1525
  2192  000EC4  C00B  F007         	movff	??_kpDebounce+1,soWrite@value
  2193  000EC8  C00C  F008         	movff	??_kpDebounce+2,soWrite@value+1
  2194  000ECC  EC4E  F009         	call	_soWrite	;wreg free
  2195                           
  2196                           ;keypad.c: 36:       if(digitalRead(PIN_B2)){
  2197  000ED0  0E00               	movlw	0
  2198  000ED2  6E02               	movwf	(digitalRead@pin+1)^0,c
  2199  000ED4  0E0A               	movlw	10
  2200  000ED6  6E01               	movwf	digitalRead@pin^0,c
  2201  000ED8  EC84  F006         	call	_digitalRead	;wreg free
  2202  000EDC  5001               	movf	?_digitalRead^0,w,c
  2203  000EDE  1002               	iorwf	(?_digitalRead+1)^0,w,c
  2204  000EE0  B4D8               	btfsc	status,2,c
  2205  000EE2  EF75  F007         	goto	u1531
  2206  000EE6  EF77  F007         	goto	u1530
  2207  000EEA                     u1531:
  2208  000EEA  EF8A  F007         	goto	l1754
  2209  000EEE                     u1530:
  2210  000EEE                     
  2211                           ;keypad.c: 37:         ((newRead) |= (1<<(i)));
  2212  000EEE  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  2213  000EF2  0E01               	movlw	1
  2214  000EF4  6E0B               	movwf	(??_kpDebounce+1)^0,c
  2215  000EF6  0E00               	movlw	0
  2216  000EF8  6E0C               	movwf	(??_kpDebounce+2)^0,c
  2217  000EFA  2A0A               	incf	??_kpDebounce^0,f,c
  2218  000EFC  EF83  F007         	goto	u1544
  2219  000F00                     u1545:
  2220  000F00  90D8               	bcf	status,0,c
  2221  000F02  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  2222  000F04  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  2223  000F06                     u1544:
  2224  000F06  2E0A               	decfsz	??_kpDebounce^0,f,c
  2225  000F08  EF80  F007         	goto	u1545
  2226  000F0C  500B               	movf	(??_kpDebounce+1)^0,w,c
  2227  000F0E  1223               	iorwf	kpDebounce@newRead^0,f,c
  2228  000F10  500C               	movf	(??_kpDebounce+2)^0,w,c
  2229  000F12  1224               	iorwf	(kpDebounce@newRead+1)^0,f,c
  2230  000F14                     l1754:
  2231                           
  2232                           ;keypad.c: 39:       if(digitalRead(PIN_B1)){
  2233  000F14  0E00               	movlw	0
  2234  000F16  6E02               	movwf	(digitalRead@pin+1)^0,c
  2235  000F18  0E09               	movlw	9
  2236  000F1A  6E01               	movwf	digitalRead@pin^0,c
  2237  000F1C  EC84  F006         	call	_digitalRead	;wreg free
  2238  000F20  5001               	movf	?_digitalRead^0,w,c
  2239  000F22  1002               	iorwf	(?_digitalRead+1)^0,w,c
  2240  000F24  B4D8               	btfsc	status,2,c
  2241  000F26  EF97  F007         	goto	u1551
  2242  000F2A  EF99  F007         	goto	u1550
  2243  000F2E                     u1551:
  2244  000F2E  EFAE  F007         	goto	l1758
  2245  000F32                     u1550:
  2246  000F32                     
  2247                           ;keypad.c: 40:         ((newRead) |= (1<<((i+5))));
  2248  000F32  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  2249  000F36  0E05               	movlw	5
  2250  000F38  260A               	addwf	??_kpDebounce^0,f,c
  2251  000F3A  0E01               	movlw	1
  2252  000F3C  6E0B               	movwf	(??_kpDebounce+1)^0,c
  2253  000F3E  0E00               	movlw	0
  2254  000F40  6E0C               	movwf	(??_kpDebounce+2)^0,c
  2255  000F42  2A0A               	incf	??_kpDebounce^0,f,c
  2256  000F44  EFA7  F007         	goto	u1564
  2257  000F48                     u1565:
  2258  000F48  90D8               	bcf	status,0,c
  2259  000F4A  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  2260  000F4C  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  2261  000F4E                     u1564:
  2262  000F4E  2E0A               	decfsz	??_kpDebounce^0,f,c
  2263  000F50  EFA4  F007         	goto	u1565
  2264  000F54  500B               	movf	(??_kpDebounce+1)^0,w,c
  2265  000F56  1223               	iorwf	kpDebounce@newRead^0,f,c
  2266  000F58  500C               	movf	(??_kpDebounce+2)^0,w,c
  2267  000F5A  1224               	iorwf	(kpDebounce@newRead+1)^0,f,c
  2268  000F5C                     l1758:
  2269                           
  2270                           ;keypad.c: 42:     }
  2271  000F5C  4A0D               	infsnz	kpDebounce@i^0,f,c
  2272  000F5E  2A0E               	incf	(kpDebounce@i+1)^0,f,c
  2273  000F60  EF41  F007         	goto	l1746
  2274  000F64                     l1762:
  2275                           
  2276                           ;keypad.c: 43:     if (oldRead == newRead) {
  2277  000F64  5023               	movf	kpDebounce@newRead^0,w,c
  2278  000F66  1821               	xorwf	kpDebounce@oldRead^0,w,c
  2279  000F68  E107               	bnz	u1571
  2280  000F6A  5024               	movf	(kpDebounce@newRead+1)^0,w,c
  2281  000F6C  1822               	xorwf	(kpDebounce@oldRead+1)^0,w,c
  2282  000F6E  A4D8               	btfss	status,2,c
  2283  000F70  EFBC  F007         	goto	u1571
  2284  000F74  EFBE  F007         	goto	u1570
  2285  000F78                     u1571:
  2286  000F78  EFC1  F007         	goto	l1766
  2287  000F7C                     u1570:
  2288  000F7C                     
  2289                           ;keypad.c: 44:         tempo--;
  2290  000F7C  062C               	decf	kpDebounce@tempo^0,f,c
  2291                           
  2292                           ;keypad.c: 45:     } else {
  2293  000F7E  EFC7  F007         	goto	l80
  2294  000F82                     l1766:
  2295                           
  2296                           ;keypad.c: 46:         tempo = 1;
  2297  000F82  0E01               	movlw	1
  2298  000F84  6E2C               	movwf	kpDebounce@tempo^0,c
  2299  000F86                     
  2300                           ;keypad.c: 47:         oldRead = newRead;
  2301  000F86  C023  F021         	movff	kpDebounce@newRead,kpDebounce@oldRead
  2302  000F8A  C024  F022         	movff	kpDebounce@newRead+1,kpDebounce@oldRead+1
  2303  000F8E                     l80:
  2304                           
  2305                           ;keypad.c: 49:     if (tempo == 0) {
  2306  000F8E  502C               	movf	kpDebounce@tempo^0,w,c
  2307  000F90  A4D8               	btfss	status,2,c
  2308  000F92  EFCD  F007         	goto	u1581
  2309  000F96  EFCF  F007         	goto	u1580
  2310  000F9A                     u1581:
  2311  000F9A  EFD3  F007         	goto	l82
  2312  000F9E                     u1580:
  2313  000F9E                     
  2314                           ;keypad.c: 50:         keys = oldRead;
  2315  000F9E  C021  F025         	movff	kpDebounce@oldRead,_keys
  2316  000FA2  C022  F026         	movff	kpDebounce@oldRead+1,_keys+1
  2317  000FA6                     l82:
  2318  000FA6  0012               	return		;funcret
  2319  000FA8                     __end_of_kpDebounce:
  2320                           	callstack 0
  2321                           
  2322 ;; *************** function _soWrite *****************
  2323 ;; Defined at:
  2324 ;;		line 18 in file "so.c"
  2325 ;; Parameters:    Size  Location     Type
  2326 ;;  value           2    6[COMRAM] int 
  2327 ;; Auto vars:     Size  Location     Type
  2328 ;;  i               1    8[COMRAM] unsigned char 
  2329 ;; Return value:  Size  Location     Type
  2330 ;;                  1    wreg      void 
  2331 ;; Registers used:
  2332 ;;		wreg, status,2, status,0, cstack
  2333 ;; Tracked objects:
  2334 ;;		On entry : 0/0
  2335 ;;		On exit  : 0/0
  2336 ;;		Unchanged: 0/0
  2337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2338 ;;      Params:         2       0       0       0       0       0       0
  2339 ;;      Locals:         1       0       0       0       0       0       0
  2340 ;;      Temps:          0       0       0       0       0       0       0
  2341 ;;      Totals:         3       0       0       0       0       0       0
  2342 ;;Total ram usage:        3 bytes
  2343 ;; Hardware stack levels used: 1
  2344 ;; Hardware stack levels required when called: 2
  2345 ;; This function calls:
  2346 ;;		_PulseClockData
  2347 ;;		_PulseEnClock
  2348 ;;		_digitalWrite
  2349 ;; This function is called by:
  2350 ;;		_kpDebounce
  2351 ;;		_pushNibble
  2352 ;;		_pushByte
  2353 ;;		_ssdUpdate
  2354 ;; This function uses a non-reentrant model
  2355 ;;
  2356                           
  2357                           	psect	text17
  2358  00129C                     __ptext17:
  2359                           	callstack 0
  2360  00129C                     _soWrite:
  2361                           	callstack 25
  2362  00129C                     
  2363                           ;so.c: 19:  char i;;so.c: 20:  digitalWrite(PIN_B0, 0);
  2364  00129C  0E00               	movlw	0
  2365  00129E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2366  0012A0  0E08               	movlw	8
  2367  0012A2  6E01               	movwf	digitalWrite@pin^0,c
  2368  0012A4  0E00               	movlw	0
  2369  0012A6  6E04               	movwf	(digitalWrite@value+1)^0,c
  2370  0012A8  0E00               	movlw	0
  2371  0012AA  6E03               	movwf	digitalWrite@value^0,c
  2372  0012AC  EC46  F004         	call	_digitalWrite	;wreg free
  2373  0012B0                     
  2374                           ;so.c: 21:  for (i = 0; i < 8; i++) {
  2375  0012B0  0E00               	movlw	0
  2376  0012B2  6E09               	movwf	soWrite@i^0,c
  2377  0012B4                     l1570:
  2378                           
  2379                           ;so.c: 22:   digitalWrite(PIN_D6, value & 0x80);
  2380  0012B4  0E00               	movlw	0
  2381  0012B6  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2382  0012B8  0E1E               	movlw	30
  2383  0012BA  6E01               	movwf	digitalWrite@pin^0,c
  2384  0012BC  0E80               	movlw	128
  2385  0012BE  1407               	andwf	soWrite@value^0,w,c
  2386  0012C0  6E03               	movwf	digitalWrite@value^0,c
  2387  0012C2  6A04               	clrf	(digitalWrite@value+1)^0,c
  2388  0012C4  EC46  F004         	call	_digitalWrite	;wreg free
  2389                           
  2390                           ;so.c: 23:   PulseClockData();
  2391  0012C8  EC18  F00A         	call	_PulseClockData	;wreg free
  2392  0012CC                     
  2393                           ;so.c: 24:   value <<= 1;
  2394  0012CC  90D8               	bcf	status,0,c
  2395  0012CE  3607               	rlcf	soWrite@value^0,f,c
  2396  0012D0  3608               	rlcf	(soWrite@value+1)^0,f,c
  2397  0012D2                     
  2398                           ;so.c: 25:  }
  2399  0012D2  2A09               	incf	soWrite@i^0,f,c
  2400  0012D4  0E07               	movlw	7
  2401  0012D6  6409               	cpfsgt	soWrite@i^0,c
  2402  0012D8  EF70  F009         	goto	u1131
  2403  0012DC  EF72  F009         	goto	u1130
  2404  0012E0                     u1131:
  2405  0012E0  EF5A  F009         	goto	l1570
  2406  0012E4                     u1130:
  2407  0012E4                     
  2408                           ;so.c: 26:  PulseEnClock();
  2409  0012E4  EC03  F00A         	call	_PulseEnClock	;wreg free
  2410  0012E8  0012               	return		;funcret
  2411  0012EA                     __end_of_soWrite:
  2412                           	callstack 0
  2413                           
  2414 ;; *************** function _PulseEnClock *****************
  2415 ;; Defined at:
  2416 ;;		line 9 in file "so.c"
  2417 ;; Parameters:    Size  Location     Type
  2418 ;;		None
  2419 ;; Auto vars:     Size  Location     Type
  2420 ;;		None
  2421 ;; Return value:  Size  Location     Type
  2422 ;;                  1    wreg      void 
  2423 ;; Registers used:
  2424 ;;		wreg, status,2, status,0, cstack
  2425 ;; Tracked objects:
  2426 ;;		On entry : 0/0
  2427 ;;		On exit  : 0/0
  2428 ;;		Unchanged: 0/0
  2429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2430 ;;      Params:         0       0       0       0       0       0       0
  2431 ;;      Locals:         0       0       0       0       0       0       0
  2432 ;;      Temps:          0       0       0       0       0       0       0
  2433 ;;      Totals:         0       0       0       0       0       0       0
  2434 ;;Total ram usage:        0 bytes
  2435 ;; Hardware stack levels used: 1
  2436 ;; Hardware stack levels required when called: 1
  2437 ;; This function calls:
  2438 ;;		_digitalWrite
  2439 ;; This function is called by:
  2440 ;;		_soWrite
  2441 ;; This function uses a non-reentrant model
  2442 ;;
  2443                           
  2444                           	psect	text18
  2445  001406                     __ptext18:
  2446                           	callstack 0
  2447  001406                     _PulseEnClock:
  2448                           	callstack 25
  2449  001406                     
  2450                           ;so.c: 10:  digitalWrite(PIN_D7, 1);
  2451  001406  0E00               	movlw	0
  2452  001408  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2453  00140A  0E1F               	movlw	31
  2454  00140C  6E01               	movwf	digitalWrite@pin^0,c
  2455  00140E  0E00               	movlw	0
  2456  001410  6E04               	movwf	(digitalWrite@value+1)^0,c
  2457  001412  0E01               	movlw	1
  2458  001414  6E03               	movwf	digitalWrite@value^0,c
  2459  001416  EC46  F004         	call	_digitalWrite	;wreg free
  2460                           
  2461                           ;so.c: 11:  digitalWrite(PIN_D7, 0);
  2462  00141A  0E00               	movlw	0
  2463  00141C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2464  00141E  0E1F               	movlw	31
  2465  001420  6E01               	movwf	digitalWrite@pin^0,c
  2466  001422  0E00               	movlw	0
  2467  001424  6E04               	movwf	(digitalWrite@value+1)^0,c
  2468  001426  0E00               	movlw	0
  2469  001428  6E03               	movwf	digitalWrite@value^0,c
  2470  00142A  EC46  F004         	call	_digitalWrite	;wreg free
  2471  00142E  0012               	return		;funcret
  2472  001430                     __end_of_PulseEnClock:
  2473                           	callstack 0
  2474                           
  2475 ;; *************** function _PulseClockData *****************
  2476 ;; Defined at:
  2477 ;;		line 14 in file "so.c"
  2478 ;; Parameters:    Size  Location     Type
  2479 ;;		None
  2480 ;; Auto vars:     Size  Location     Type
  2481 ;;		None
  2482 ;; Return value:  Size  Location     Type
  2483 ;;                  1    wreg      void 
  2484 ;; Registers used:
  2485 ;;		wreg, status,2, status,0, cstack
  2486 ;; Tracked objects:
  2487 ;;		On entry : 0/0
  2488 ;;		On exit  : 0/0
  2489 ;;		Unchanged: 0/0
  2490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2491 ;;      Params:         0       0       0       0       0       0       0
  2492 ;;      Locals:         0       0       0       0       0       0       0
  2493 ;;      Temps:          0       0       0       0       0       0       0
  2494 ;;      Totals:         0       0       0       0       0       0       0
  2495 ;;Total ram usage:        0 bytes
  2496 ;; Hardware stack levels used: 1
  2497 ;; Hardware stack levels required when called: 1
  2498 ;; This function calls:
  2499 ;;		_digitalWrite
  2500 ;; This function is called by:
  2501 ;;		_soWrite
  2502 ;; This function uses a non-reentrant model
  2503 ;;
  2504                           
  2505                           	psect	text19
  2506  001430                     __ptext19:
  2507                           	callstack 0
  2508  001430                     _PulseClockData:
  2509                           	callstack 25
  2510  001430                     
  2511                           ;so.c: 15:  digitalWrite(PIN_B0, 1);
  2512  001430  0E00               	movlw	0
  2513  001432  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2514  001434  0E08               	movlw	8
  2515  001436  6E01               	movwf	digitalWrite@pin^0,c
  2516  001438  0E00               	movlw	0
  2517  00143A  6E04               	movwf	(digitalWrite@value+1)^0,c
  2518  00143C  0E01               	movlw	1
  2519  00143E  6E03               	movwf	digitalWrite@value^0,c
  2520  001440  EC46  F004         	call	_digitalWrite	;wreg free
  2521                           
  2522                           ;so.c: 16:  digitalWrite(PIN_B0, 0);
  2523  001444  0E00               	movlw	0
  2524  001446  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2525  001448  0E08               	movlw	8
  2526  00144A  6E01               	movwf	digitalWrite@pin^0,c
  2527  00144C  0E00               	movlw	0
  2528  00144E  6E04               	movwf	(digitalWrite@value+1)^0,c
  2529  001450  0E00               	movlw	0
  2530  001452  6E03               	movwf	digitalWrite@value^0,c
  2531  001454  EC46  F004         	call	_digitalWrite	;wreg free
  2532  001458  0012               	return		;funcret
  2533  00145A                     __end_of_PulseClockData:
  2534                           	callstack 0
  2535                           
  2536 ;; *************** function _digitalWrite *****************
  2537 ;; Defined at:
  2538 ;;		line 14 in file "io.c"
  2539 ;; Parameters:    Size  Location     Type
  2540 ;;  pin             2    0[COMRAM] int 
  2541 ;;  value           2    2[COMRAM] int 
  2542 ;; Auto vars:     Size  Location     Type
  2543 ;;		None
  2544 ;; Return value:  Size  Location     Type
  2545 ;;                  1    wreg      void 
  2546 ;; Registers used:
  2547 ;;		wreg, status,2, status,0
  2548 ;; Tracked objects:
  2549 ;;		On entry : 0/0
  2550 ;;		On exit  : 0/0
  2551 ;;		Unchanged: 0/0
  2552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2553 ;;      Params:         4       0       0       0       0       0       0
  2554 ;;      Locals:         0       0       0       0       0       0       0
  2555 ;;      Temps:          2       0       0       0       0       0       0
  2556 ;;      Totals:         6       0       0       0       0       0       0
  2557 ;;Total ram usage:        6 bytes
  2558 ;; Hardware stack levels used: 1
  2559 ;; This function calls:
  2560 ;;		Nothing
  2561 ;; This function is called by:
  2562 ;;		_pulseEnablePin
  2563 ;;		_pushNibble
  2564 ;;		_pushByte
  2565 ;;		_PulseEnClock
  2566 ;;		_PulseClockData
  2567 ;;		_soWrite
  2568 ;;		_ssdUpdate
  2569 ;; This function uses a non-reentrant model
  2570 ;;
  2571                           
  2572                           	psect	text20
  2573  00088C                     __ptext20:
  2574                           	callstack 0
  2575  00088C                     _digitalWrite:
  2576                           	callstack 26
  2577  00088C                     
  2578                           ;io.c: 16:     if(pin <8){
  2579  00088C  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  2580  00088E  EF54  F004         	goto	u930
  2581  000892  5002               	movf	(digitalWrite@pin+1)^0,w,c
  2582  000894  E107               	bnz	u931
  2583  000896  0E08               	movlw	8
  2584  000898  5C01               	subwf	digitalWrite@pin^0,w,c
  2585  00089A  B0D8               	btfsc	status,0,c
  2586  00089C  EF52  F004         	goto	u931
  2587  0008A0  EF54  F004         	goto	u930
  2588  0008A4                     u931:
  2589  0008A4  EF7E  F004         	goto	l1526
  2590  0008A8                     u930:
  2591  0008A8                     
  2592                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  2593  0008A8  5003               	movf	digitalWrite@value^0,w,c
  2594  0008AA  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  2595  0008AC  B4D8               	btfsc	status,2,c
  2596  0008AE  EF5B  F004         	goto	u941
  2597  0008B2  EF5D  F004         	goto	u940
  2598  0008B6                     u941:
  2599  0008B6  EF6D  F004         	goto	l1524
  2600  0008BA                     u940:
  2601  0008BA  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2602  0008BE  0E01               	movlw	1
  2603  0008C0  6E06               	movwf	(??_digitalWrite+1)^0,c
  2604  0008C2  2A05               	incf	??_digitalWrite^0,f,c
  2605  0008C4  EF66  F004         	goto	u954
  2606  0008C8                     u955:
  2607  0008C8  90D8               	bcf	status,0,c
  2608  0008CA  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2609  0008CC                     u954:
  2610  0008CC  2E05               	decfsz	??_digitalWrite^0,f,c
  2611  0008CE  EF64  F004         	goto	u955
  2612  0008D2  5006               	movf	(??_digitalWrite+1)^0,w,c
  2613  0008D4  1280               	iorwf	128,f,c	;volatile
  2614  0008D6  EF6C  F005         	goto	l179
  2615  0008DA                     l1524:
  2616  0008DA  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2617  0008DE  0E01               	movlw	1
  2618  0008E0  6E06               	movwf	(??_digitalWrite+1)^0,c
  2619  0008E2  2A05               	incf	??_digitalWrite^0,f,c
  2620  0008E4  EF76  F004         	goto	u964
  2621  0008E8                     u965:
  2622  0008E8  90D8               	bcf	status,0,c
  2623  0008EA  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2624  0008EC                     u964:
  2625  0008EC  2E05               	decfsz	??_digitalWrite^0,f,c
  2626  0008EE  EF74  F004         	goto	u965
  2627  0008F2  5006               	movf	(??_digitalWrite+1)^0,w,c
  2628  0008F4  0AFF               	xorlw	255
  2629  0008F6  1680               	andwf	128,f,c	;volatile
  2630  0008F8  EF6C  F005         	goto	l179
  2631  0008FC                     l1526:
  2632  0008FC  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  2633  0008FE  EF8C  F004         	goto	u970
  2634  000902  5002               	movf	(digitalWrite@pin+1)^0,w,c
  2635  000904  E107               	bnz	u971
  2636  000906  0E10               	movlw	16
  2637  000908  5C01               	subwf	digitalWrite@pin^0,w,c
  2638  00090A  B0D8               	btfsc	status,0,c
  2639  00090C  EF8A  F004         	goto	u971
  2640  000910  EF8C  F004         	goto	u970
  2641  000914                     u971:
  2642  000914  EFBA  F004         	goto	l1534
  2643  000918                     u970:
  2644  000918                     
  2645                           ;io.c: 20:         pin -=8;
  2646  000918  0EF8               	movlw	248
  2647  00091A  2601               	addwf	digitalWrite@pin^0,f,c
  2648  00091C  0EFF               	movlw	255
  2649  00091E  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  2650                           
  2651                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  2652  000920  5003               	movf	digitalWrite@value^0,w,c
  2653  000922  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  2654  000924  B4D8               	btfsc	status,2,c
  2655  000926  EF97  F004         	goto	u981
  2656  00092A  EF99  F004         	goto	u980
  2657  00092E                     u981:
  2658  00092E  EFA9  F004         	goto	l1532
  2659  000932                     u980:
  2660  000932  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2661  000936  0E01               	movlw	1
  2662  000938  6E06               	movwf	(??_digitalWrite+1)^0,c
  2663  00093A  2A05               	incf	??_digitalWrite^0,f,c
  2664  00093C  EFA2  F004         	goto	u994
  2665  000940                     u995:
  2666  000940  90D8               	bcf	status,0,c
  2667  000942  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2668  000944                     u994:
  2669  000944  2E05               	decfsz	??_digitalWrite^0,f,c
  2670  000946  EFA0  F004         	goto	u995
  2671  00094A  5006               	movf	(??_digitalWrite+1)^0,w,c
  2672  00094C  1281               	iorwf	129,f,c	;volatile
  2673  00094E  EF6C  F005         	goto	l179
  2674  000952                     l1532:
  2675  000952  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2676  000956  0E01               	movlw	1
  2677  000958  6E06               	movwf	(??_digitalWrite+1)^0,c
  2678  00095A  2A05               	incf	??_digitalWrite^0,f,c
  2679  00095C  EFB2  F004         	goto	u1004
  2680  000960                     u1005:
  2681  000960  90D8               	bcf	status,0,c
  2682  000962  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2683  000964                     u1004:
  2684  000964  2E05               	decfsz	??_digitalWrite^0,f,c
  2685  000966  EFB0  F004         	goto	u1005
  2686  00096A  5006               	movf	(??_digitalWrite+1)^0,w,c
  2687  00096C  0AFF               	xorlw	255
  2688  00096E  1681               	andwf	129,f,c	;volatile
  2689  000970  EF6C  F005         	goto	l179
  2690  000974                     l1534:
  2691  000974  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  2692  000976  EFC8  F004         	goto	u1010
  2693  00097A  5002               	movf	(digitalWrite@pin+1)^0,w,c
  2694  00097C  E107               	bnz	u1011
  2695  00097E  0E18               	movlw	24
  2696  000980  5C01               	subwf	digitalWrite@pin^0,w,c
  2697  000982  B0D8               	btfsc	status,0,c
  2698  000984  EFC6  F004         	goto	u1011
  2699  000988  EFC8  F004         	goto	u1010
  2700  00098C                     u1011:
  2701  00098C  EFF6  F004         	goto	l1542
  2702  000990                     u1010:
  2703  000990                     
  2704                           ;io.c: 24:         pin -=16;
  2705  000990  0EF0               	movlw	240
  2706  000992  2601               	addwf	digitalWrite@pin^0,f,c
  2707  000994  0EFF               	movlw	255
  2708  000996  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  2709                           
  2710                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  2711  000998  5003               	movf	digitalWrite@value^0,w,c
  2712  00099A  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  2713  00099C  B4D8               	btfsc	status,2,c
  2714  00099E  EFD3  F004         	goto	u1021
  2715  0009A2  EFD5  F004         	goto	u1020
  2716  0009A6                     u1021:
  2717  0009A6  EFE5  F004         	goto	l1540
  2718  0009AA                     u1020:
  2719  0009AA  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2720  0009AE  0E01               	movlw	1
  2721  0009B0  6E06               	movwf	(??_digitalWrite+1)^0,c
  2722  0009B2  2A05               	incf	??_digitalWrite^0,f,c
  2723  0009B4  EFDE  F004         	goto	u1034
  2724  0009B8                     u1035:
  2725  0009B8  90D8               	bcf	status,0,c
  2726  0009BA  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2727  0009BC                     u1034:
  2728  0009BC  2E05               	decfsz	??_digitalWrite^0,f,c
  2729  0009BE  EFDC  F004         	goto	u1035
  2730  0009C2  5006               	movf	(??_digitalWrite+1)^0,w,c
  2731  0009C4  1282               	iorwf	130,f,c	;volatile
  2732  0009C6  EF6C  F005         	goto	l179
  2733  0009CA                     l1540:
  2734  0009CA  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2735  0009CE  0E01               	movlw	1
  2736  0009D0  6E06               	movwf	(??_digitalWrite+1)^0,c
  2737  0009D2  2A05               	incf	??_digitalWrite^0,f,c
  2738  0009D4  EFEE  F004         	goto	u1044
  2739  0009D8                     u1045:
  2740  0009D8  90D8               	bcf	status,0,c
  2741  0009DA  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2742  0009DC                     u1044:
  2743  0009DC  2E05               	decfsz	??_digitalWrite^0,f,c
  2744  0009DE  EFEC  F004         	goto	u1045
  2745  0009E2  5006               	movf	(??_digitalWrite+1)^0,w,c
  2746  0009E4  0AFF               	xorlw	255
  2747  0009E6  1682               	andwf	130,f,c	;volatile
  2748  0009E8  EF6C  F005         	goto	l179
  2749  0009EC                     l1542:
  2750  0009EC  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  2751  0009EE  EF04  F005         	goto	u1050
  2752  0009F2  5002               	movf	(digitalWrite@pin+1)^0,w,c
  2753  0009F4  E107               	bnz	u1051
  2754  0009F6  0E20               	movlw	32
  2755  0009F8  5C01               	subwf	digitalWrite@pin^0,w,c
  2756  0009FA  B0D8               	btfsc	status,0,c
  2757  0009FC  EF02  F005         	goto	u1051
  2758  000A00  EF04  F005         	goto	u1050
  2759  000A04                     u1051:
  2760  000A04  EF32  F005         	goto	l1550
  2761  000A08                     u1050:
  2762  000A08                     
  2763                           ;io.c: 28:         pin -=24;
  2764  000A08  0EE8               	movlw	232
  2765  000A0A  2601               	addwf	digitalWrite@pin^0,f,c
  2766  000A0C  0EFF               	movlw	255
  2767  000A0E  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  2768                           
  2769                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  2770  000A10  5003               	movf	digitalWrite@value^0,w,c
  2771  000A12  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  2772  000A14  B4D8               	btfsc	status,2,c
  2773  000A16  EF0F  F005         	goto	u1061
  2774  000A1A  EF11  F005         	goto	u1060
  2775  000A1E                     u1061:
  2776  000A1E  EF21  F005         	goto	l1548
  2777  000A22                     u1060:
  2778  000A22  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2779  000A26  0E01               	movlw	1
  2780  000A28  6E06               	movwf	(??_digitalWrite+1)^0,c
  2781  000A2A  2A05               	incf	??_digitalWrite^0,f,c
  2782  000A2C  EF1A  F005         	goto	u1074
  2783  000A30                     u1075:
  2784  000A30  90D8               	bcf	status,0,c
  2785  000A32  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2786  000A34                     u1074:
  2787  000A34  2E05               	decfsz	??_digitalWrite^0,f,c
  2788  000A36  EF18  F005         	goto	u1075
  2789  000A3A  5006               	movf	(??_digitalWrite+1)^0,w,c
  2790  000A3C  1283               	iorwf	131,f,c	;volatile
  2791  000A3E  EF6C  F005         	goto	l179
  2792  000A42                     l1548:
  2793  000A42  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2794  000A46  0E01               	movlw	1
  2795  000A48  6E06               	movwf	(??_digitalWrite+1)^0,c
  2796  000A4A  2A05               	incf	??_digitalWrite^0,f,c
  2797  000A4C  EF2A  F005         	goto	u1084
  2798  000A50                     u1085:
  2799  000A50  90D8               	bcf	status,0,c
  2800  000A52  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2801  000A54                     u1084:
  2802  000A54  2E05               	decfsz	??_digitalWrite^0,f,c
  2803  000A56  EF28  F005         	goto	u1085
  2804  000A5A  5006               	movf	(??_digitalWrite+1)^0,w,c
  2805  000A5C  0AFF               	xorlw	255
  2806  000A5E  1683               	andwf	131,f,c	;volatile
  2807  000A60  EF6C  F005         	goto	l179
  2808  000A64                     l1550:
  2809  000A64  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  2810  000A66  EF40  F005         	goto	u1090
  2811  000A6A  5002               	movf	(digitalWrite@pin+1)^0,w,c
  2812  000A6C  E107               	bnz	u1091
  2813  000A6E  0E28               	movlw	40
  2814  000A70  5C01               	subwf	digitalWrite@pin^0,w,c
  2815  000A72  B0D8               	btfsc	status,0,c
  2816  000A74  EF3E  F005         	goto	u1091
  2817  000A78  EF40  F005         	goto	u1090
  2818  000A7C                     u1091:
  2819  000A7C  EF6C  F005         	goto	l179
  2820  000A80                     u1090:
  2821  000A80                     
  2822                           ;io.c: 32:         pin -=32;
  2823  000A80  0EE0               	movlw	224
  2824  000A82  2601               	addwf	digitalWrite@pin^0,f,c
  2825  000A84  0EFF               	movlw	255
  2826  000A86  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  2827                           
  2828                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  2829  000A88  5003               	movf	digitalWrite@value^0,w,c
  2830  000A8A  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  2831  000A8C  B4D8               	btfsc	status,2,c
  2832  000A8E  EF4B  F005         	goto	u1101
  2833  000A92  EF4D  F005         	goto	u1100
  2834  000A96                     u1101:
  2835  000A96  EF5D  F005         	goto	l1556
  2836  000A9A                     u1100:
  2837  000A9A  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2838  000A9E  0E01               	movlw	1
  2839  000AA0  6E06               	movwf	(??_digitalWrite+1)^0,c
  2840  000AA2  2A05               	incf	??_digitalWrite^0,f,c
  2841  000AA4  EF56  F005         	goto	u1114
  2842  000AA8                     u1115:
  2843  000AA8  90D8               	bcf	status,0,c
  2844  000AAA  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2845  000AAC                     u1114:
  2846  000AAC  2E05               	decfsz	??_digitalWrite^0,f,c
  2847  000AAE  EF54  F005         	goto	u1115
  2848  000AB2  5006               	movf	(??_digitalWrite+1)^0,w,c
  2849  000AB4  1284               	iorwf	132,f,c	;volatile
  2850  000AB6  EF6C  F005         	goto	l179
  2851  000ABA                     l1556:
  2852  000ABA  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2853  000ABE  0E01               	movlw	1
  2854  000AC0  6E06               	movwf	(??_digitalWrite+1)^0,c
  2855  000AC2  2A05               	incf	??_digitalWrite^0,f,c
  2856  000AC4  EF66  F005         	goto	u1124
  2857  000AC8                     u1125:
  2858  000AC8  90D8               	bcf	status,0,c
  2859  000ACA  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2860  000ACC                     u1124:
  2861  000ACC  2E05               	decfsz	??_digitalWrite^0,f,c
  2862  000ACE  EF64  F005         	goto	u1125
  2863  000AD2  5006               	movf	(??_digitalWrite+1)^0,w,c
  2864  000AD4  0AFF               	xorlw	255
  2865  000AD6  1684               	andwf	132,f,c	;volatile
  2866  000AD8                     l179:
  2867  000AD8  0012               	return		;funcret
  2868  000ADA                     __end_of_digitalWrite:
  2869                           	callstack 0
  2870                           
  2871 ;; *************** function _digitalRead *****************
  2872 ;; Defined at:
  2873 ;;		line 39 in file "io.c"
  2874 ;; Parameters:    Size  Location     Type
  2875 ;;  pin             2    0[COMRAM] int 
  2876 ;; Auto vars:     Size  Location     Type
  2877 ;;		None
  2878 ;; Return value:  Size  Location     Type
  2879 ;;                  2    0[COMRAM] int 
  2880 ;; Registers used:
  2881 ;;		wreg, status,2, status,0
  2882 ;; Tracked objects:
  2883 ;;		On entry : 0/0
  2884 ;;		On exit  : 0/0
  2885 ;;		Unchanged: 0/0
  2886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2887 ;;      Params:         2       0       0       0       0       0       0
  2888 ;;      Locals:         0       0       0       0       0       0       0
  2889 ;;      Temps:          3       0       0       0       0       0       0
  2890 ;;      Totals:         5       0       0       0       0       0       0
  2891 ;;Total ram usage:        5 bytes
  2892 ;; Hardware stack levels used: 1
  2893 ;; This function calls:
  2894 ;;		Nothing
  2895 ;; This function is called by:
  2896 ;;		_kpDebounce
  2897 ;; This function uses a non-reentrant model
  2898 ;;
  2899                           
  2900                           	psect	text21
  2901  000D08                     __ptext21:
  2902                           	callstack 0
  2903  000D08                     _digitalRead:
  2904                           	callstack 29
  2905  000D08                     
  2906                           ;io.c: 40:     if(pin <8){
  2907  000D08  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  2908  000D0A  EF92  F006         	goto	u1350
  2909  000D0E  5002               	movf	(digitalRead@pin+1)^0,w,c
  2910  000D10  E107               	bnz	u1351
  2911  000D12  0E08               	movlw	8
  2912  000D14  5C01               	subwf	digitalRead@pin^0,w,c
  2913  000D16  B0D8               	btfsc	status,0,c
  2914  000D18  EF90  F006         	goto	u1351
  2915  000D1C  EF92  F006         	goto	u1350
  2916  000D20                     u1351:
  2917  000D20  EFA6  F006         	goto	l1648
  2918  000D24                     u1350:
  2919  000D24                     
  2920                           ;io.c: 41:         return ((PORTA) & (1<<(pin)));
  2921  000D24  C001  F003         	movff	digitalRead@pin,??_digitalRead
  2922  000D28  0E01               	movlw	1
  2923  000D2A  6E04               	movwf	(??_digitalRead+1)^0,c
  2924  000D2C  2A03               	incf	??_digitalRead^0,f,c
  2925  000D2E  EF9B  F006         	goto	u1364
  2926  000D32                     u1365:
  2927  000D32  90D8               	bcf	status,0,c
  2928  000D34  3604               	rlcf	(??_digitalRead+1)^0,f,c
  2929  000D36                     u1364:
  2930  000D36  2E03               	decfsz	??_digitalRead^0,f,c
  2931  000D38  EF99  F006         	goto	u1365
  2932  000D3C  5004               	movf	(??_digitalRead+1)^0,w,c
  2933  000D3E  1480               	andwf	128,w,c	;volatile
  2934  000D40  6E05               	movwf	(??_digitalRead+2)^0,c
  2935  000D42  5005               	movf	(??_digitalRead+2)^0,w,c
  2936  000D44  6E01               	movwf	?_digitalRead^0,c
  2937  000D46  6A02               	clrf	(?_digitalRead+1)^0,c
  2938  000D48  EF38  F007         	goto	l183
  2939  000D4C                     l1648:
  2940  000D4C  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  2941  000D4E  EFB4  F006         	goto	u1370
  2942  000D52  5002               	movf	(digitalRead@pin+1)^0,w,c
  2943  000D54  E107               	bnz	u1371
  2944  000D56  0E10               	movlw	16
  2945  000D58  5C01               	subwf	digitalRead@pin^0,w,c
  2946  000D5A  B0D8               	btfsc	status,0,c
  2947  000D5C  EFB2  F006         	goto	u1371
  2948  000D60  EFB4  F006         	goto	u1370
  2949  000D64                     u1371:
  2950  000D64  EFCA  F006         	goto	l1656
  2951  000D68                     u1370:
  2952  000D68                     
  2953                           ;io.c: 43:         return ((PORTB) & (1<<(pin-8)));
  2954  000D68  C001  F003         	movff	digitalRead@pin,??_digitalRead
  2955  000D6C  0EF8               	movlw	-8
  2956  000D6E  2603               	addwf	??_digitalRead^0,f,c
  2957  000D70  0E01               	movlw	1
  2958  000D72  6E04               	movwf	(??_digitalRead+1)^0,c
  2959  000D74  2A03               	incf	??_digitalRead^0,f,c
  2960  000D76  EFBF  F006         	goto	u1384
  2961  000D7A                     u1385:
  2962  000D7A  90D8               	bcf	status,0,c
  2963  000D7C  3604               	rlcf	(??_digitalRead+1)^0,f,c
  2964  000D7E                     u1384:
  2965  000D7E  2E03               	decfsz	??_digitalRead^0,f,c
  2966  000D80  EFBD  F006         	goto	u1385
  2967  000D84  5004               	movf	(??_digitalRead+1)^0,w,c
  2968  000D86  1481               	andwf	129,w,c	;volatile
  2969  000D88  6E05               	movwf	(??_digitalRead+2)^0,c
  2970  000D8A  5005               	movf	(??_digitalRead+2)^0,w,c
  2971  000D8C  6E01               	movwf	?_digitalRead^0,c
  2972  000D8E  6A02               	clrf	(?_digitalRead+1)^0,c
  2973  000D90  EF38  F007         	goto	l183
  2974  000D94                     l1656:
  2975  000D94  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  2976  000D96  EFD8  F006         	goto	u1390
  2977  000D9A  5002               	movf	(digitalRead@pin+1)^0,w,c
  2978  000D9C  E107               	bnz	u1391
  2979  000D9E  0E18               	movlw	24
  2980  000DA0  5C01               	subwf	digitalRead@pin^0,w,c
  2981  000DA2  B0D8               	btfsc	status,0,c
  2982  000DA4  EFD6  F006         	goto	u1391
  2983  000DA8  EFD8  F006         	goto	u1390
  2984  000DAC                     u1391:
  2985  000DAC  EFEE  F006         	goto	l1664
  2986  000DB0                     u1390:
  2987  000DB0                     
  2988                           ;io.c: 45:         return ((PORTC) & (1<<(pin-16)));
  2989  000DB0  C001  F003         	movff	digitalRead@pin,??_digitalRead
  2990  000DB4  0EF0               	movlw	-16
  2991  000DB6  2603               	addwf	??_digitalRead^0,f,c
  2992  000DB8  0E01               	movlw	1
  2993  000DBA  6E04               	movwf	(??_digitalRead+1)^0,c
  2994  000DBC  2A03               	incf	??_digitalRead^0,f,c
  2995  000DBE  EFE3  F006         	goto	u1404
  2996  000DC2                     u1405:
  2997  000DC2  90D8               	bcf	status,0,c
  2998  000DC4  3604               	rlcf	(??_digitalRead+1)^0,f,c
  2999  000DC6                     u1404:
  3000  000DC6  2E03               	decfsz	??_digitalRead^0,f,c
  3001  000DC8  EFE1  F006         	goto	u1405
  3002  000DCC  5004               	movf	(??_digitalRead+1)^0,w,c
  3003  000DCE  1482               	andwf	130,w,c	;volatile
  3004  000DD0  6E05               	movwf	(??_digitalRead+2)^0,c
  3005  000DD2  5005               	movf	(??_digitalRead+2)^0,w,c
  3006  000DD4  6E01               	movwf	?_digitalRead^0,c
  3007  000DD6  6A02               	clrf	(?_digitalRead+1)^0,c
  3008  000DD8  EF38  F007         	goto	l183
  3009  000DDC                     l1664:
  3010  000DDC  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  3011  000DDE  EFFC  F006         	goto	u1410
  3012  000DE2  5002               	movf	(digitalRead@pin+1)^0,w,c
  3013  000DE4  E107               	bnz	u1411
  3014  000DE6  0E20               	movlw	32
  3015  000DE8  5C01               	subwf	digitalRead@pin^0,w,c
  3016  000DEA  B0D8               	btfsc	status,0,c
  3017  000DEC  EFFA  F006         	goto	u1411
  3018  000DF0  EFFC  F006         	goto	u1410
  3019  000DF4                     u1411:
  3020  000DF4  EF12  F007         	goto	l1672
  3021  000DF8                     u1410:
  3022  000DF8                     
  3023                           ;io.c: 47:         return ((PORTD) & (1<<(pin-24)));
  3024  000DF8  C001  F003         	movff	digitalRead@pin,??_digitalRead
  3025  000DFC  0EE8               	movlw	-24
  3026  000DFE  2603               	addwf	??_digitalRead^0,f,c
  3027  000E00  0E01               	movlw	1
  3028  000E02  6E04               	movwf	(??_digitalRead+1)^0,c
  3029  000E04  2A03               	incf	??_digitalRead^0,f,c
  3030  000E06  EF07  F007         	goto	u1424
  3031  000E0A                     u1425:
  3032  000E0A  90D8               	bcf	status,0,c
  3033  000E0C  3604               	rlcf	(??_digitalRead+1)^0,f,c
  3034  000E0E                     u1424:
  3035  000E0E  2E03               	decfsz	??_digitalRead^0,f,c
  3036  000E10  EF05  F007         	goto	u1425
  3037  000E14  5004               	movf	(??_digitalRead+1)^0,w,c
  3038  000E16  1483               	andwf	131,w,c	;volatile
  3039  000E18  6E05               	movwf	(??_digitalRead+2)^0,c
  3040  000E1A  5005               	movf	(??_digitalRead+2)^0,w,c
  3041  000E1C  6E01               	movwf	?_digitalRead^0,c
  3042  000E1E  6A02               	clrf	(?_digitalRead+1)^0,c
  3043  000E20  EF38  F007         	goto	l183
  3044  000E24                     l1672:
  3045  000E24  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  3046  000E26  EF20  F007         	goto	u1430
  3047  000E2A  5002               	movf	(digitalRead@pin+1)^0,w,c
  3048  000E2C  E107               	bnz	u1431
  3049  000E2E  0E28               	movlw	40
  3050  000E30  5C01               	subwf	digitalRead@pin^0,w,c
  3051  000E32  B0D8               	btfsc	status,0,c
  3052  000E34  EF1E  F007         	goto	u1431
  3053  000E38  EF20  F007         	goto	u1430
  3054  000E3C                     u1431:
  3055  000E3C  EF36  F007         	goto	l188
  3056  000E40                     u1430:
  3057  000E40                     
  3058                           ;io.c: 49:         return ((PORTE) & (1<<(pin-32)));
  3059  000E40  C001  F003         	movff	digitalRead@pin,??_digitalRead
  3060  000E44  0EE0               	movlw	-32
  3061  000E46  2603               	addwf	??_digitalRead^0,f,c
  3062  000E48  0E01               	movlw	1
  3063  000E4A  6E04               	movwf	(??_digitalRead+1)^0,c
  3064  000E4C  2A03               	incf	??_digitalRead^0,f,c
  3065  000E4E  EF2B  F007         	goto	u1444
  3066  000E52                     u1445:
  3067  000E52  90D8               	bcf	status,0,c
  3068  000E54  3604               	rlcf	(??_digitalRead+1)^0,f,c
  3069  000E56                     u1444:
  3070  000E56  2E03               	decfsz	??_digitalRead^0,f,c
  3071  000E58  EF29  F007         	goto	u1445
  3072  000E5C  5004               	movf	(??_digitalRead+1)^0,w,c
  3073  000E5E  1484               	andwf	132,w,c	;volatile
  3074  000E60  6E05               	movwf	(??_digitalRead+2)^0,c
  3075  000E62  5005               	movf	(??_digitalRead+2)^0,w,c
  3076  000E64  6E01               	movwf	?_digitalRead^0,c
  3077  000E66  6A02               	clrf	(?_digitalRead+1)^0,c
  3078  000E68  EF38  F007         	goto	l183
  3079  000E6C                     l188:
  3080  000E6C                     
  3081                           ;io.c: 51:     return -1;
  3082  000E6C  6801               	setf	?_digitalRead^0,c
  3083  000E6E  6802               	setf	(?_digitalRead+1)^0,c
  3084  000E70                     l183:
  3085  000E70  0012               	return		;funcret
  3086  000E72                     __end_of_digitalRead:
  3087                           	callstack 0
  3088                           
  3089 ;; *************** function ___llmod *****************
  3090 ;; Defined at:
  3091 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\llmod.c"
  3092 ;; Parameters:    Size  Location     Type
  3093 ;;  dividend        4   13[COMRAM] unsigned long 
  3094 ;;  divisor         4   17[COMRAM] unsigned long 
  3095 ;; Auto vars:     Size  Location     Type
  3096 ;;  counter         1   21[COMRAM] unsigned char 
  3097 ;; Return value:  Size  Location     Type
  3098 ;;                  4   13[COMRAM] unsigned long 
  3099 ;; Registers used:
  3100 ;;		wreg, status,2, status,0
  3101 ;; Tracked objects:
  3102 ;;		On entry : 0/0
  3103 ;;		On exit  : 0/0
  3104 ;;		Unchanged: 0/0
  3105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3106 ;;      Params:         8       0       0       0       0       0       0
  3107 ;;      Locals:         1       0       0       0       0       0       0
  3108 ;;      Temps:          0       0       0       0       0       0       0
  3109 ;;      Totals:         9       0       0       0       0       0       0
  3110 ;;Total ram usage:        9 bytes
  3111 ;; Hardware stack levels used: 1
  3112 ;; This function calls:
  3113 ;;		Nothing
  3114 ;; This function is called by:
  3115 ;;		_main
  3116 ;; This function uses a non-reentrant model
  3117 ;;
  3118                           
  3119                           	psect	text22
  3120  001100                     __ptext22:
  3121                           	callstack 0
  3122  001100                     ___llmod:
  3123                           	callstack 30
  3124  001100  5012               	movf	___llmod@divisor^0,w,c
  3125  001102  1013               	iorwf	(___llmod@divisor+1)^0,w,c
  3126  001104  1014               	iorwf	(___llmod@divisor+2)^0,w,c
  3127  001106  1015               	iorwf	(___llmod@divisor+3)^0,w,c
  3128  001108  B4D8               	btfsc	status,2,c
  3129  00110A  EF89  F008         	goto	u1621
  3130  00110E  EF8B  F008         	goto	u1620
  3131  001112                     u1621:
  3132  001112  EFBB  F008         	goto	l771
  3133  001116                     u1620:
  3134  001116  0E01               	movlw	1
  3135  001118  6E16               	movwf	___llmod@counter^0,c
  3136  00111A  EF95  F008         	goto	l1802
  3137  00111E                     l1800:
  3138  00111E  90D8               	bcf	status,0,c
  3139  001120  3612               	rlcf	___llmod@divisor^0,f,c
  3140  001122  3613               	rlcf	(___llmod@divisor+1)^0,f,c
  3141  001124  3614               	rlcf	(___llmod@divisor+2)^0,f,c
  3142  001126  3615               	rlcf	(___llmod@divisor+3)^0,f,c
  3143  001128  2A16               	incf	___llmod@counter^0,f,c
  3144  00112A                     l1802:
  3145  00112A  AE15               	btfss	(___llmod@divisor+3)^0,7,c
  3146  00112C  EF9A  F008         	goto	u1631
  3147  001130  EF9C  F008         	goto	u1630
  3148  001134                     u1631:
  3149  001134  EF8F  F008         	goto	l1800
  3150  001138                     u1630:
  3151  001138                     l1804:
  3152  001138  5012               	movf	___llmod@divisor^0,w,c
  3153  00113A  5C0E               	subwf	___llmod@dividend^0,w,c
  3154  00113C  5013               	movf	(___llmod@divisor+1)^0,w,c
  3155  00113E  580F               	subwfb	(___llmod@dividend+1)^0,w,c
  3156  001140  5014               	movf	(___llmod@divisor+2)^0,w,c
  3157  001142  5810               	subwfb	(___llmod@dividend+2)^0,w,c
  3158  001144  5015               	movf	(___llmod@divisor+3)^0,w,c
  3159  001146  5811               	subwfb	(___llmod@dividend+3)^0,w,c
  3160  001148  A0D8               	btfss	status,0,c
  3161  00114A  EFA9  F008         	goto	u1641
  3162  00114E  EFAB  F008         	goto	u1640
  3163  001152                     u1641:
  3164  001152  EFB3  F008         	goto	l1808
  3165  001156                     u1640:
  3166  001156  5012               	movf	___llmod@divisor^0,w,c
  3167  001158  5E0E               	subwf	___llmod@dividend^0,f,c
  3168  00115A  5013               	movf	(___llmod@divisor+1)^0,w,c
  3169  00115C  5A0F               	subwfb	(___llmod@dividend+1)^0,f,c
  3170  00115E  5014               	movf	(___llmod@divisor+2)^0,w,c
  3171  001160  5A10               	subwfb	(___llmod@dividend+2)^0,f,c
  3172  001162  5015               	movf	(___llmod@divisor+3)^0,w,c
  3173  001164  5A11               	subwfb	(___llmod@dividend+3)^0,f,c
  3174  001166                     l1808:
  3175  001166  90D8               	bcf	status,0,c
  3176  001168  3215               	rrcf	(___llmod@divisor+3)^0,f,c
  3177  00116A  3214               	rrcf	(___llmod@divisor+2)^0,f,c
  3178  00116C  3213               	rrcf	(___llmod@divisor+1)^0,f,c
  3179  00116E  3212               	rrcf	___llmod@divisor^0,f,c
  3180  001170  2E16               	decfsz	___llmod@counter^0,f,c
  3181  001172  EF9C  F008         	goto	l1804
  3182  001176                     l771:
  3183  001176  C00E  F00E         	movff	___llmod@dividend,?___llmod
  3184  00117A  C00F  F00F         	movff	___llmod@dividend+1,?___llmod+1
  3185  00117E  C010  F010         	movff	___llmod@dividend+2,?___llmod+2
  3186  001182  C011  F011         	movff	___llmod@dividend+3,?___llmod+3
  3187  001186  0012               	return		;funcret
  3188  001188                     __end_of___llmod:
  3189                           	callstack 0
  3190                           
  3191 ;; *************** function ___lldiv *****************
  3192 ;; Defined at:
  3193 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
  3194 ;; Parameters:    Size  Location     Type
  3195 ;;  dividend        4    0[COMRAM] unsigned long 
  3196 ;;  divisor         4    4[COMRAM] unsigned long 
  3197 ;; Auto vars:     Size  Location     Type
  3198 ;;  quotient        4    8[COMRAM] unsigned long 
  3199 ;;  counter         1   12[COMRAM] unsigned char 
  3200 ;; Return value:  Size  Location     Type
  3201 ;;                  4    0[COMRAM] unsigned long 
  3202 ;; Registers used:
  3203 ;;		wreg, status,2, status,0
  3204 ;; Tracked objects:
  3205 ;;		On entry : 0/0
  3206 ;;		On exit  : 0/0
  3207 ;;		Unchanged: 0/0
  3208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3209 ;;      Params:         8       0       0       0       0       0       0
  3210 ;;      Locals:         5       0       0       0       0       0       0
  3211 ;;      Temps:          0       0       0       0       0       0       0
  3212 ;;      Totals:        13       0       0       0       0       0       0
  3213 ;;Total ram usage:       13 bytes
  3214 ;; Hardware stack levels used: 1
  3215 ;; This function calls:
  3216 ;;		Nothing
  3217 ;; This function is called by:
  3218 ;;		_main
  3219 ;; This function uses a non-reentrant model
  3220 ;;
  3221                           
  3222                           	psect	text23
  3223  00105C                     __ptext23:
  3224                           	callstack 0
  3225  00105C                     ___lldiv:
  3226                           	callstack 30
  3227  00105C  0E00               	movlw	0
  3228  00105E  6E09               	movwf	___lldiv@quotient^0,c
  3229  001060  0E00               	movlw	0
  3230  001062  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  3231  001064  0E00               	movlw	0
  3232  001066  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  3233  001068  0E00               	movlw	0
  3234  00106A  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  3235  00106C  5005               	movf	___lldiv@divisor^0,w,c
  3236  00106E  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  3237  001070  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  3238  001072  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  3239  001074  B4D8               	btfsc	status,2,c
  3240  001076  EF3F  F008         	goto	u1591
  3241  00107A  EF41  F008         	goto	u1590
  3242  00107E                     u1591:
  3243  00107E  EF77  F008         	goto	l378
  3244  001082                     u1590:
  3245  001082  0E01               	movlw	1
  3246  001084  6E0D               	movwf	___lldiv@counter^0,c
  3247  001086  EF4B  F008         	goto	l1782
  3248  00108A                     l1780:
  3249  00108A  90D8               	bcf	status,0,c
  3250  00108C  3605               	rlcf	___lldiv@divisor^0,f,c
  3251  00108E  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  3252  001090  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  3253  001092  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  3254  001094  2A0D               	incf	___lldiv@counter^0,f,c
  3255  001096                     l1782:
  3256  001096  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  3257  001098  EF50  F008         	goto	u1601
  3258  00109C  EF52  F008         	goto	u1600
  3259  0010A0                     u1601:
  3260  0010A0  EF45  F008         	goto	l1780
  3261  0010A4                     u1600:
  3262  0010A4                     l1784:
  3263  0010A4  90D8               	bcf	status,0,c
  3264  0010A6  3609               	rlcf	___lldiv@quotient^0,f,c
  3265  0010A8  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  3266  0010AA  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  3267  0010AC  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  3268  0010AE  5005               	movf	___lldiv@divisor^0,w,c
  3269  0010B0  5C01               	subwf	___lldiv@dividend^0,w,c
  3270  0010B2  5006               	movf	(___lldiv@divisor+1)^0,w,c
  3271  0010B4  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  3272  0010B6  5007               	movf	(___lldiv@divisor+2)^0,w,c
  3273  0010B8  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  3274  0010BA  5008               	movf	(___lldiv@divisor+3)^0,w,c
  3275  0010BC  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  3276  0010BE  A0D8               	btfss	status,0,c
  3277  0010C0  EF64  F008         	goto	u1611
  3278  0010C4  EF66  F008         	goto	u1610
  3279  0010C8                     u1611:
  3280  0010C8  EF6F  F008         	goto	l1792
  3281  0010CC                     u1610:
  3282  0010CC  5005               	movf	___lldiv@divisor^0,w,c
  3283  0010CE  5E01               	subwf	___lldiv@dividend^0,f,c
  3284  0010D0  5006               	movf	(___lldiv@divisor+1)^0,w,c
  3285  0010D2  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  3286  0010D4  5007               	movf	(___lldiv@divisor+2)^0,w,c
  3287  0010D6  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  3288  0010D8  5008               	movf	(___lldiv@divisor+3)^0,w,c
  3289  0010DA  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  3290  0010DC  8009               	bsf	___lldiv@quotient^0,0,c
  3291  0010DE                     l1792:
  3292  0010DE  90D8               	bcf	status,0,c
  3293  0010E0  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  3294  0010E2  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  3295  0010E4  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  3296  0010E6  3205               	rrcf	___lldiv@divisor^0,f,c
  3297  0010E8  2E0D               	decfsz	___lldiv@counter^0,f,c
  3298  0010EA  EF52  F008         	goto	l1784
  3299  0010EE                     l378:
  3300  0010EE  C009  F001         	movff	___lldiv@quotient,?___lldiv
  3301  0010F2  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  3302  0010F6  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  3303  0010FA  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  3304  0010FE  0012               	return		;funcret
  3305  001100                     __end_of___lldiv:
  3306                           	callstack 0
  3307                           
  3308                           	psect	rparam
  3309  0000                     
  3310                           	psect	idloc
  3311                           
  3312                           ;Config register IDLOC0 @ 0x200000
  3313                           ;	unspecified, using default values
  3314  200000                     	org	2097152
  3315  200000  FF                 	db	255
  3316                           
  3317                           ;Config register IDLOC1 @ 0x200001
  3318                           ;	unspecified, using default values
  3319  200001                     	org	2097153
  3320  200001  FF                 	db	255
  3321                           
  3322                           ;Config register IDLOC2 @ 0x200002
  3323                           ;	unspecified, using default values
  3324  200002                     	org	2097154
  3325  200002  FF                 	db	255
  3326                           
  3327                           ;Config register IDLOC3 @ 0x200003
  3328                           ;	unspecified, using default values
  3329  200003                     	org	2097155
  3330  200003  FF                 	db	255
  3331                           
  3332                           ;Config register IDLOC4 @ 0x200004
  3333                           ;	unspecified, using default values
  3334  200004                     	org	2097156
  3335  200004  FF                 	db	255
  3336                           
  3337                           ;Config register IDLOC5 @ 0x200005
  3338                           ;	unspecified, using default values
  3339  200005                     	org	2097157
  3340  200005  FF                 	db	255
  3341                           
  3342                           ;Config register IDLOC6 @ 0x200006
  3343                           ;	unspecified, using default values
  3344  200006                     	org	2097158
  3345  200006  FF                 	db	255
  3346                           
  3347                           ;Config register IDLOC7 @ 0x200007
  3348                           ;	unspecified, using default values
  3349  200007                     	org	2097159
  3350  200007  FF                 	db	255
  3351                           
  3352                           	psect	config
  3353                           
  3354                           ; Padding undefined space
  3355  300000                     	org	3145728
  3356  300000  FF                 	db	255
  3357                           
  3358                           ;Config register CONFIG1H @ 0x300001
  3359                           ;	Oscillator Selection bits
  3360                           ;	OSC = HS, HS oscillator
  3361                           ;	Fail-Safe Clock Monitor Enable bit
  3362                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3363                           ;	Internal/External Oscillator Switchover bit
  3364                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3365  300001                     	org	3145729
  3366  300001  02                 	db	2
  3367                           
  3368                           ;Config register CONFIG2L @ 0x300002
  3369                           ;	Power-up Timer Enable bit
  3370                           ;	PWRT = OFF, PWRT disabled
  3371                           ;	Brown-out Reset Enable bits
  3372                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  3373                           ;	Brown Out Reset Voltage bits
  3374                           ;	BORV = 0x2E, user specified literal
  3375  300002                     	org	3145730
  3376  300002  71                 	db	369
  3377                           
  3378                           ;Config register CONFIG2H @ 0x300003
  3379                           ;	Watchdog Timer Enable bit
  3380                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3381                           ;	Watchdog Timer Postscale Select bits
  3382                           ;	WDTPS = 1, 1:1
  3383  300003                     	org	3145731
  3384  300003  00                 	db	0
  3385                           
  3386                           ; Padding undefined space
  3387  300004                     	org	3145732
  3388  300004  FF                 	db	255
  3389                           
  3390                           ;Config register CONFIG3H @ 0x300005
  3391                           ;	CCP2 MUX bit
  3392                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  3393                           ;	PORTB A/D Enable bit
  3394                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  3395                           ;	Low-Power Timer1 Oscillator Enable bit
  3396                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3397                           ;	MCLR Pin Enable bit
  3398                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3399  300005                     	org	3145733
  3400  300005  83                 	db	131
  3401                           
  3402                           ;Config register CONFIG4L @ 0x300006
  3403                           ;	Stack Full/Underflow Reset Enable bit
  3404                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  3405                           ;	Single-Supply ICSP Enable bit
  3406                           ;	LVP = OFF, Single-Supply ICSP disabled
  3407                           ;	Extended Instruction Set Enable bit
  3408                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3409                           ;	Background Debugger Enable bit
  3410                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  3411  300006                     	org	3145734
  3412  300006  80                 	db	128
  3413                           
  3414                           ; Padding undefined space
  3415  300007                     	org	3145735
  3416  300007  FF                 	db	255
  3417                           
  3418                           ;Config register CONFIG5L @ 0x300008
  3419                           ;	Code Protection bit
  3420                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  3421                           ;	Code Protection bit
  3422                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  3423                           ;	Code Protection bit
  3424                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  3425                           ;	Code Protection bit
  3426                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  3427  300008                     	org	3145736
  3428  300008  0F                 	db	15
  3429                           
  3430                           ;Config register CONFIG5H @ 0x300009
  3431                           ;	Boot Block Code Protection bit
  3432                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3433                           ;	Data EEPROM Code Protection bit
  3434                           ;	CPD = OFF, Data EEPROM not code-protected
  3435  300009                     	org	3145737
  3436  300009  C0                 	db	192
  3437                           
  3438                           ;Config register CONFIG6L @ 0x30000A
  3439                           ;	Write Protection bit
  3440                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  3441                           ;	Write Protection bit
  3442                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  3443                           ;	Write Protection bit
  3444                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  3445                           ;	Write Protection bit
  3446                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  3447  30000A                     	org	3145738
  3448  30000A  0F                 	db	15
  3449                           
  3450                           ;Config register CONFIG6H @ 0x30000B
  3451                           ;	Configuration Register Write Protection bit
  3452                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3453                           ;	Boot Block Write Protection bit
  3454                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  3455                           ;	Data EEPROM Write Protection bit
  3456                           ;	WRTD = OFF, Data EEPROM not write-protected
  3457  30000B                     	org	3145739
  3458  30000B  E0                 	db	224
  3459                           
  3460                           ;Config register CONFIG7L @ 0x30000C
  3461                           ;	Table Read Protection bit
  3462                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  3463                           ;	Table Read Protection bit
  3464                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  3465                           ;	Table Read Protection bit
  3466                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  3467                           ;	Table Read Protection bit
  3468                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3469  30000C                     	org	3145740
  3470  30000C  0F                 	db	15
  3471                           
  3472                           ;Config register CONFIG7H @ 0x30000D
  3473                           ;	Boot Block Table Read Protection bit
  3474                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3475  30000D                     	org	3145741
  3476  30000D  40                 	db	64
  3477                           tosu	equ	0xFFF
  3478                           tosh	equ	0xFFE
  3479                           tosl	equ	0xFFD
  3480                           stkptr	equ	0xFFC
  3481                           pclatu	equ	0xFFB
  3482                           pclath	equ	0xFFA
  3483                           pcl	equ	0xFF9
  3484                           tblptru	equ	0xFF8
  3485                           tblptrh	equ	0xFF7
  3486                           tblptrl	equ	0xFF6
  3487                           tablat	equ	0xFF5
  3488                           prodh	equ	0xFF4
  3489                           prodl	equ	0xFF3
  3490                           indf0	equ	0xFEF
  3491                           postinc0	equ	0xFEE
  3492                           postdec0	equ	0xFED
  3493                           preinc0	equ	0xFEC
  3494                           plusw0	equ	0xFEB
  3495                           fsr0h	equ	0xFEA
  3496                           fsr0l	equ	0xFE9
  3497                           wreg	equ	0xFE8
  3498                           indf1	equ	0xFE7
  3499                           postinc1	equ	0xFE6
  3500                           postdec1	equ	0xFE5
  3501                           preinc1	equ	0xFE4
  3502                           plusw1	equ	0xFE3
  3503                           fsr1h	equ	0xFE2
  3504                           fsr1l	equ	0xFE1
  3505                           bsr	equ	0xFE0
  3506                           indf2	equ	0xFDF
  3507                           postinc2	equ	0xFDE
  3508                           postdec2	equ	0xFDD
  3509                           preinc2	equ	0xFDC
  3510                           plusw2	equ	0xFDB
  3511                           fsr2h	equ	0xFDA
  3512                           fsr2l	equ	0xFD9
  3513                           status	equ	0xFD8

Data Sizes:
    Strings     34
    Constant    26
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     32      44
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcdString@msg	PTR unsigned char  size(2) Largest target is 14
		 -> STR_4(CODE[12]), STR_3(CODE[14]), STR_2(CODE[8]), STR_1(CODE[12]), 


Critical Paths under _main in COMRAM

    _main->___llmod
    _lcdString->_lcdChar
    _lcdChar->_pushByte
    _lcdPosition->_lcdCommand
    _lcdInit->_lcdCommand
    _pushNibble->_soWrite
    _lcdCommand->_pushByte
    _pushByte->_soWrite
    _pulseEnablePin->_digitalWrite
    _kpInit->_pinMode
    _soInit->_pinMode
    _kpDebounce->_soWrite
    _soWrite->_digitalWrite
    _PulseEnClock->_digitalWrite
    _PulseClockData->_digitalWrite
    ___llmod->___lldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0  134652
                                             22 COMRAM    10    10      0
                            ___lldiv
                            ___llmod
                         _kpDebounce
                             _kpInit
                             _kpRead
                            _lcdChar
                         _lcdCommand
                            _lcdInit
                        _lcdPosition
                          _lcdString
                               _temp
 ---------------------------------------------------------------------------------
 (1) _temp                                                 6     4      2     290
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _lcdString                                            6     4      2   18829
                                             14 COMRAM     6     4      2
                            _lcdChar
 ---------------------------------------------------------------------------------
 (2) _lcdChar                                              1     1      0   18435
                                             13 COMRAM     1     1      0
                         _delayMicro
                           _pushByte
 ---------------------------------------------------------------------------------
 (1) _lcdPosition                                          4     0      4   18797
                                             14 COMRAM     4     0      4
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0   42412
                         _delayMicro
                          _delayMili
                         _lcdCommand
                            _pinMode
                         _pushNibble
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _pushNibble                                           3     1      2   18141
                                              9 COMRAM     3     1      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (2) _lcdCommand                                           1     1      0   18405
                                             13 COMRAM     1     1      0
                          _delayMili
                           _pushByte
 ---------------------------------------------------------------------------------
 (3) _pushByte                                             4     2      2   18033
                                              9 COMRAM     4     2      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (4) _pulseEnablePin                                       0     0      0    3712
                         _delayMicro
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (5) _delayMicro                                           4     2      2     380
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _delayMili                                            5     3      2     350
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0    5136
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _soInit                                               0     0      0    2568
                            _pinMode
 ---------------------------------------------------------------------------------
 (3) _pinMode                                              6     2      4    2568
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _kpDebounce                                           5     5      0   11233
                                              9 COMRAM     5     5      0
                        _digitalRead
                            _soWrite
 ---------------------------------------------------------------------------------
 (4) _soWrite                                              3     1      2   10749
                                              6 COMRAM     3     1      2
                     _PulseClockData
                       _PulseEnClock
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (5) _PulseEnClock                                         0     0      0    3332
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (5) _PulseClockData                                       0     0      0    3332
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (5) _digitalWrite                                         6     2      4    3332
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _digitalRead                                          5     3      2     372
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) ___llmod                                              9     1      8     463
                                             13 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             13     5      8     466
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lldiv
   ___llmod
     ___lldiv (ARG)
   _kpDebounce
     _digitalRead
     _soWrite
       _PulseClockData
         _digitalWrite
       _PulseEnClock
         _digitalWrite
       _digitalWrite
   _kpInit
     _pinMode
     _soInit
       _pinMode
   _kpRead
   _lcdChar
     _delayMicro
     _pushByte
       _digitalWrite
       _pulseEnablePin
         _delayMicro
         _digitalWrite
       _soWrite
   _lcdCommand
     _delayMili
     _pushByte
   _lcdInit
     _delayMicro
     _delayMili
     _lcdCommand
     _pinMode
     _pushNibble
       _digitalWrite
       _pulseEnablePin
       _soWrite
     _soInit
   _lcdPosition
     _lcdCommand
   _lcdString
     _lcdChar
   _temp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     20      2C       1       34.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2C      15        0.0%
DATA                 0      0      2C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Dec 17 17:27:37 2021

         _pulseEnablePin 12EA             lcdString@msg 000F                       l30 11EA  
                     l60 14DA                       l80 0F8E                       l82 0FA6  
                     l85 13D4                       l96 14DC                       _v0 002A  
                     _v1 0029                       _v2 0028                       _v3 0027  
                    l102 1404                      l111 1244                      l105 132A  
                    l114 14BA                      l122 149C                      l220 1368  
                    l108 147E                      l213 088A                      l223 142E  
                    l231 12E8                      l119 13A2                      l128 129A  
                    l137 105A                      l226 1458                      l183 0E70  
                    l184 0E6C                      l179 0AD8                      l188 0E6C  
                    l385 10FE                      l378 10EE                      l771 1176  
                    l778 1186                      u930 08A8                      u931 08A4  
                    u940 08BA                      u941 08B6                      u970 0918  
                    u954 08CC                      u971 0914                      u955 08C8  
                    u980 0932                      u964 08EC                      u981 092E  
                    u965 08E8                      u994 0944                      u995 0940  
                    wreg 000FE8                     l1520 08A8                     l1600 0700  
                   l1530 0932                     l1522 08BA                     l1610 079E  
                   l1602 0726                     l1540 09CA                     l1532 0952  
                   l1524 08DA                     l1620 0832                     l1612 07BA  
                   l1604 0742                     l1700 11CA                     l1550 0A64  
                   l1542 09EC                     l1534 0974                     l1526 08FC  
                   l1518 088C                     l1622 0844                     l1614 07CC  
                   l1606 0754                     l1630 13E6                     l1710 137C  
                   l1800 111E                     l1640 0D08                     l1552 0A80  
                   l1544 0A08                     l1536 0990                     l1528 0918  
                   l1560 1430                     l1624 0868                     l1616 07F0  
                   l1608 0778                     l1632 11EE                     l1720 1014  
                   l1712 1386                     l1704 11D0                     l1810 1170  
                   l1802 112A                     l1650 0D68                     l1642 0D24  
                   l1554 0A9A                     l1546 0A22                     l1538 09AA  
                   l1570 12B4                     l1562 129C                     l1618 0816  
                   l1626 13D6                     l1730 1054                     l1722 102E  
                   l1714 1398                     l1634 1482                     l1706 11D4  
                   l1804 1138                     l1556 0ABA                     l1548 0A42  
                   l1572 12CC                     l1564 12B0                     l1732 13A4  
                   l1628 13E2                     l1580 12EA                     l1724 103C  
                   l1716 0FA8                     l1708 136A                     l1636 1490  
                   l1740 126E                     l1820 0B1E                     l1812 0ADA  
                   l1806 1156                     l1558 1406                     l1574 12D2  
                   l1750 0EA2                     l1590 066C                     l1734 13D0  
                   l1582 12FE                     l1638 14A0                     l1726 1048  
                   l1718 1008                     l1742 1272                     l1830 0B62  
                   l1822 0B2A                     l1814 0B02                     l1808 1166  
                   l1672 0E24                     l1664 0DDC                     l1656 0D94  
                   l1648 0D4C                     l1576 12D4                     l1752 0EEE  
                   l1744 0E72                     l1592 068C                     l1584 130A  
                   l1680 145C                     l1728 104E                     l1736 1246  
                   l1840 0C2E                     l1832 0BB2                     l1824 0B36  
                   l1816 0B16                     l1674 0E40                     l1666 0DF8  
                   l1658 0DB0                     l1578 12E4                     l1770 0F9E  
                   l1754 0F14                     l1762 0F64                     l1746 0E82  
                   l1594 06AE                     l1586 063E                     l1738 1252  
                   l1690 11AC                     l1682 1188                     l1850 0C78  
                   l1842 0C3C                     l1834 0C02                     l1826 0B42  
                   l1818 0B1A                     l1780 108A                     l1764 0F7C  
                   l1756 0F32                     l1596 06CA                     l1588 065A  
                   l1772 14D2                     l1692 11B0                     l1684 1194  
                   l1860 0CBA                     l1852 0C88                     l1844 0C4C  
                   l1836 0C06                     l1828 0B56                     l1790 10DC  
                   l1782 1096                     l1774 105C                     l1766 0F82  
                   l1758 0F5C                     l1598 06DC                     l1678 132C  
                   l1686 1198                     l1870 0CDE                     l1862 0CC6  
                   l1854 0C96                     l1846 0C5A                     l1838 0C22  
                   l1792 10DE                     l1784 10A4                     l1776 106C  
                   l1768 0F86                     l1696 11C4                     l1872 0CEA  
                   l1864 0CCA                     l1856 0CA6                     l1848 0C6A  
                   l1794 10E8                     l1786 10AE                     l1778 1082  
                   l1874 0CEE                     l1866 0CCE                     l1858 0CB4  
                   l1788 10CC                     l1796 1100                     l1868 0CDA  
                   l1798 1116                     STR_1 0629                     STR_2 0635  
                   STR_3 061B                     STR_4 0629                     u1010 0990  
                   u1011 098C                     u1100 0A9A                     u1020 09AA  
                   u1004 0964                     u1101 0A96                     u1021 09A6  
                   u1005 0960                     u1114 0AAC                     u1050 0A08  
                   u1034 09BC                     u1130 12E4                     u1115 0AA8  
                   u1051 0A04                     u1035 09B8                     u1131 12E0  
                   u1124 0ACC                     u1060 0A22                     u1044 09DC  
                   u1300 0832                     u1220 0742                     u1204 06F2  
                   u1140 065A                     u1125 0AC8                     u1061 0A1E  
                   u1045 09D8                     u1301 082E                     u1221 073E  
                   u1205 06EE                     u1141 0656                     u1310 0844  
                   u1230 0754                     u1214 0716                     u1150 066C  
                   u1311 0840                     u1231 0750                     u1215 0712  
                   u1151 0668                     u1410 0DF8                     u1090 0A80  
                   u1074 0A34                     u1411 0DF4                     u1091 0A7C  
                   u1075 0A30                     u1404 0DC6                     u1084 0A54  
                   u1324 085A                     u1260 07BA                     u1244 076A  
                   u1180 06CA                     u1164 067E                     u1340 1404  
                   u1500 129A                     u1405 0DC2                     u1085 0A50  
                   u1325 0856                     u1261 07B6                     u1245 0766  
                   u1181 06C6                     u1165 067A                     u1341 1400  
                   u1501 1296                     u1430 0E40                     u1350 0D24  
                   u1510 0E9E                     u1334 087E                     u1270 07CC  
                   u1254 078E                     u1190 06DC                     u1174 069E  
                   u1431 0E3C                     u1351 0D20                     u1511 0E9A  
                   u1335 087A                     u1271 07C8                     u1255 078A  
                   u1191 06D8                     u1175 069A                     u1600 10A4  
                   u1424 0E0E                     u1601 10A0                     u1425 0E0A  
                   u1610 10CC                     u1370 0D68                     u1530 0EEE  
                   u1450 11A8                     u1611 10C8                     u1371 0D64  
                   u1531 0EEA                     u1451 11A4                     u1620 1116  
                   u1444 0E56                     u1364 0D36                     u1524 0EBE  
                   u1284 07E2                     u1460 11C0                     u1700 0CB4  
                   u1621 1112                     u1445 0E52                     u1365 0D32  
                   u1525 0EB8                     u1285 07DE                     u1461 11BC  
                   u1701 0CB0                     u1630 1138                     u1390 0DB0  
                   u1550 0F32                     u1294 0806                     u1470 11EA  
                   u1631 1134                     u1391 0DAC                     u1551 0F2E  
                   u1295 0802                     u1471 11E6                     u1640 1156  
                   u1384 0D7E                     u1544 0F06                     u1480 137C  
                   u1641 1152                     u1385 0D7A                     u1545 0F00  
                   u1481 1378                     u1570 0F7C                     u1490 1398  
                   u1650 0C22                     u1571 0F78                     u1491 1394  
                   u1651 0C1E                     u1580 0F9E                     u1564 0F4E  
                   u1660 0C3C                     u1581 0F9A                     u1565 0F48  
                   u1661 0C38                     u1590 1082                     u1670 0C5A  
                   u1591 107E                     u1671 0C56                     u1680 0C78  
                   u1681 0C74                     u1690 0C96                     u1691 0C92  
                   _PIR1 000F9E                     _main 0ADA                     _keys 0025  
       ??_PulseClockData 0007                     _temp 1188                     start 0000  
        pushNibble@value 000C             ___param_bank 000000   __end_of_pulseEnablePin 132C  
                  ?_main 0001                    ?_temp 0001          __end_of___lldiv 1100  
                  _T0CON 000FD5          __end_of___llmod 1188                    _RCREG 000FAE  
                  _RCSTA 000FAB                    _TMR0H 000FD7                    _TMR0L 000FD6  
                  _SPBRG 000FAF                    _PORTA 000F80                    _PORTB 000F81  
                  _PORTC 000F82                    _PORTD 000F83                    _PORTE 000F84  
        __end_of_charKey 061B                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _TRISE 000F96  
                  _TXREG 000FAD                    _TXSTA 000FAC          __end_of_lcdChar 149E  
        __end_of_lcdInit 105C          __end_of_pinMode 088C                    _valor 0601  
        __end_of_soWrite 12EA                    tablat 000FF5                    temp@X 0001  
                  temp@i 0003                    temp@j 0005                    temp@k 0006  
                  status 000FD8             pushNibble@rs 000A     __end_of_digitalWrite 0ADA  
        __initialization 14BC          ?_pulseEnablePin 0001             __end_of_main 0D08  
           __end_of_temp 11EC                   ??_main 0017                   ??_temp 0003  
          __activetblptr 000002     __size_of_digitalRead 016A                   _ADCON0 000FC2  
                 _ADCON1 000FC1                   _ADCON2 000FC0         ___llmod@dividend 000E  
                 _ADRESH 000FC4                   _ADRESL 000FC3                   _INTCON 000FF2  
                 _SPBRGH 000FB0     __size_of_lcdPosition 003A                ??___lldiv 0009  
              ??___llmod 0016                   _kpInit 13A4                   _kpRead 14D2  
                 clear_0 14C2                   _soInit 132C                ??_lcdChar 000E  
                 isa$std 000001                ??_lcdInit 000F                ??_pinMode 0005  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8                ??_soWrite 0009         __end_of_pushByte 1246  
             __accesstop 0080  __end_of__initialization 14C8            ___rparam_used 000001  
          pushByte@value 000D              pinMode@type 0003           __pcstackCOMRAM 0001  
          __end_of_valor 0611       __size_of_delayMili 0030       __size_of_lcdString 0056  
  __size_of_digitalWrite 024E               _delayMicro 14DC               _lcdCommand 149E  
                ?_kpInit 0001                  ?_kpRead 0001                  _BAUDCON 000FB8  
                ?_soInit 0001               _kpDebounce 0E72             _digitalWrite 088C  
      __end_of_delayMili 1406         ??_pulseEnablePin 0007                  __Hparam 0000  
                __Lparam 0000        __end_of_lcdString 129C          kpDebounce@tempo 002C  
              ?_pushByte 000A                  ___lldiv 105C                  ___llmod 1100  
           __psmallconst 0600          __size_of_kpInit 0032          __size_of_kpRead 000A  
                _charKey 0611                  __pcinit 14BC                  _lcdChar 1480  
                __ramtop 0600          __size_of_soInit 003E                  _lcdInit 0FA8  
                __ptext0 0ADA                  __ptext1 1188                  __ptext2 1246  
                __ptext3 1480                  __ptext4 136A                  __ptext5 0FA8  
                __ptext6 145A                  __ptext7 149E                  __ptext8 11EC  
                __ptext9 12EA                  _display 002B                  _pinMode 063E  
             delayMili@a 0001               delayMili@i 0004                  _soWrite 129C  
   end_of_initialization 14C8            ?_PulseEnClock 0001            __Lmediumconst 0000  
         digitalRead@pin 0001              ?_delayMicro 0001          ___lldiv@divisor 0005  
        ___lldiv@counter 000D              ?_lcdCommand 0001                  postinc0 000FEE  
             ??_pushByte 000C  __size_of_PulseClockData 002A            ??_digitalRead 0003  
            ?_kpDebounce 0001               _pushNibble 145A               lcdString@i 0013  
          ??_lcdPosition 0013           ??_PulseEnClock 0007           __end_of_kpInit 13D6  
         __end_of_kpRead 14DC           __end_of_soInit 136A      __size_of_delayMicro 0002  
    start_initialization 14BC      __end_of_digitalRead 0E72      __size_of_lcdCommand 001E  
    __size_of_kpDebounce 0136          ___llmod@divisor 0012          ___llmod@counter 0016  
    __end_of_lcdPosition 13A4        kpDebounce@oldRead 0021        kpDebounce@newRead 0023  
               ??_kpInit 0007                 ??_kpRead 0003                 ??_soInit 0007  
            __pbssCOMRAM 0021              ?_pushNibble 000A               pinMode@pin 0001  
              _delayMili 13D6                 ?___lldiv 0001                 ?___llmod 000E  
         _PulseClockData 1430     __end_of_PulseEnClock 1430                _lcdString 1246  
            _digitalRead 0D08                 ?_lcdChar 0001        __size_of_pushByte 005A  
               ?_lcdInit 0001              __smallconst 0600                 ?_pinMode 0001  
               ?_soWrite 0007              _lcdPosition 136A             ??_delayMicro 0003  
             ?_delayMili 0001   __end_of_PulseClockData 145A      __size_of_pushNibble 0026  
           ??_lcdCommand 000E               ?_lcdString 000F             ??_kpDebounce 000A  
        lcdCommand@value 000E                main@tecla 001F       __end_of_delayMicro 14DE  
     __end_of_lcdCommand 14BC               pushByte@rs 000A             lcdChar@value 000E  
     __end_of_kpDebounce 0FA8                 __Hrparam 0000                 __Lrparam 0000  
        lcdPosition@line 000F          ?_PulseClockData 0001  __size_of_pulseEnablePin 0042  
       __size_of___lldiv 00A4         __size_of___llmod 0088         __size_of_lcdChar 001E  
       __size_of_lcdInit 00B4         __size_of_pinMode 024E                 __ptext10 14DC  
               __ptext11 13D6                 __ptext20 088C                 __ptext12 14D2  
               __ptext21 0D08                 __ptext13 13A4                 __ptext22 1100  
               __ptext14 132C                 __ptext23 105C                 __ptext15 063E  
               __ptext16 0E72                 __ptext17 129C                 __ptext18 1406  
               __ptext19 1430         __size_of_soWrite 004E            __size_of_main 022E  
          __size_of_temp 0064              ??_delayMili 0003    __size_of_PulseEnClock 002A  
            delayMicro@a 0001                 isa$xinst 000000             soWrite@value 0007  
               _pushByte 11EC              ??_lcdString 0011                 main@cont 0017  
               main@rels 001B             ??_pushNibble 000C           lcdPosition@col 0011  
          ?_digitalWrite 0001             _PulseEnClock 1406        digitalWrite@value 0003  
       ___lldiv@dividend 0001                 soWrite@i 0009       __end_of_pushNibble 1480  
           ?_digitalRead 0001         ___lldiv@quotient 0009              kpDebounce@i 000D  
         ??_digitalWrite 0005             ?_lcdPosition 000F          digitalWrite@pin 0001  
